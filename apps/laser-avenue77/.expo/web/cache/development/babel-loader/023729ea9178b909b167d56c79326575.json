{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Actionsheet, useDisclose, Box, Text, Center, NativeBaseProvider } from \"native-base\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onCloseUsers, saveSelectedUsers } from \"../store-notification\";\nimport Icon from '@expo/vector-icons/Ionicons';\nimport { Heading, VStack, FormControl, Input, Select, CheckIcon, WarningOutlineIcon, TextArea, IconButton, Checkbox, HStack } from \"native-base\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nDropDownPicker.setMode('BADGE');\n\nfunction Example() {\n  var storeNotification = useSelector(function (state) {\n    return state.notification;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selctedUsers = _useState4[0],\n      setSelctedUsers = _useState4[1];\n\n  var _useState5 = useState(storeNotification.users),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1];\n\n  useEffect(function () {\n    setUsers(storeNotification.users);\n  }, []);\n  useEffect(function () {\n    dispatch(saveSelectedUsers(selctedUsers));\n  }, [selctedUsers]);\n  return _jsx(Center, {\n    children: _jsx(View, {\n      children: _jsx(Actionsheet, {\n        isOpen: storeNotification.modalFlagUsers,\n        onClose: function onClose() {\n          return dispatch(onCloseUsers());\n        },\n        size: \"full\",\n        children: _jsx(Actionsheet.Content, {\n          style: {\n            height: 325\n          },\n          children: _jsx(DropDownPicker, {\n            open: open,\n            value: selctedUsers,\n            items: users,\n            setOpen: setOpen,\n            setValue: setSelctedUsers,\n            setItems: setUsers,\n            multiple: true,\n            min: 0,\n            schema: {\n              label: 'name',\n              value: 'profileId'\n            },\n            placeholder: \"Select Users\",\n            searchable: true,\n            searchPlaceholder: \"Search by user name\",\n            badgeStyle: {\n              padding: 5,\n              shadowColor: '#EEEE',\n              shadowOffset: {\n                width: 0,\n                height: 2\n              },\n              shadowOpacity: 0.25,\n              shadowRadius: 3.84,\n              elevation: 5\n            },\n            badgeColors: ['teal'],\n            badgeDotColors: ['black'],\n            badgeTextStyle: {\n              fontStyle: 'italic',\n              color: 'white'\n            }\n          })\n        })\n      })\n    })\n  });\n}\n\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      children: _jsx(Example, {})\n    })\n  });\n});","map":{"version":3,"names":["React","useState","useEffect","Button","Actionsheet","useDisclose","Box","Text","Center","NativeBaseProvider","useDispatch","useSelector","onCloseUsers","saveSelectedUsers","Icon","Heading","VStack","FormControl","Input","Select","CheckIcon","WarningOutlineIcon","TextArea","IconButton","Checkbox","HStack","DropDownPicker","setMode","Example","storeNotification","state","notification","dispatch","open","setOpen","selctedUsers","setSelctedUsers","users","setUsers","modalFlagUsers","height","label","value","padding","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","fontStyle","color"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/apps/laser-avenue77/src/Notification/Screens/usersModal.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { Button, Actionsheet, useDisclose, Box, Text, Center, NativeBaseProvider } from \"native-base\";\r\n// import { Path } from \"react-native-svg\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {onCloseUsers,saveSelectedUsers} from '../store-notification'\r\nimport Icon from '@expo/vector-icons/Ionicons';\r\nimport {  Heading, VStack, FormControl, Input,Select, CheckIcon, WarningOutlineIcon,TextArea, IconButton, Checkbox, HStack  } from \"native-base\";\r\nimport {View} from 'react-native'\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nDropDownPicker.setMode('BADGE');\r\n\r\n\r\nfunction Example() {\r\n\r\n  \r\n  const storeNotification = useSelector(state => state.notification);\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const [selctedUsers, setSelctedUsers] = useState([]);\r\n  const [users, setUsers] = useState(storeNotification.users);\r\n    useEffect(() => {\r\n      setUsers(storeNotification.users)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      dispatch(saveSelectedUsers(selctedUsers))\r\n\r\n    }, [selctedUsers])\r\n    \r\n\r\n\r\n  return <Center >\r\n    <View >\r\n      <Actionsheet  isOpen={storeNotification.modalFlagUsers} onClose={()=>(dispatch(onCloseUsers()))} size=\"full\">\r\n        <Actionsheet.Content  style={{height:325}}>\r\n          \r\n        <DropDownPicker\r\n\r\n                    open={open}\r\n                    value={selctedUsers}\r\n                    items={users}\r\n                    setOpen={setOpen}\r\n                    setValue={setSelctedUsers}\r\n                    setItems={setUsers}\r\n                    multiple={true}\r\n                    min={0}\r\n                    schema={{\r\n                      label: 'name',\r\n                      value: 'profileId',\r\n               \r\n                    }}\r\n                    placeholder=\"Select Users\"\r\n                    searchable={true}\r\n                    searchPlaceholder=\"Search by user name\"\r\n                    badgeStyle={{\r\n                      padding: 5,\r\n                      shadowColor: '#EEEE',\r\n                      shadowOffset: {\r\n                        width: 0,\r\n                        height: 2,\r\n                      },\r\n                  \r\n                  \r\n                      shadowOpacity: 0.25,\r\n                      shadowRadius: 3.84,\r\n                      elevation: 5,\r\n                    }}\r\n                    badgeColors={['teal']}\r\n                    badgeDotColors={['black']}\r\n                    badgeTextStyle={{\r\n                      fontStyle: 'italic',\r\n                      color: 'white',\r\n                    }}\r\n                  />\r\n        </Actionsheet.Content>\r\n      </Actionsheet>\r\n      </View>\r\n    </Center>;\r\n}\r\n\r\n    export default () => {\r\n        return (\r\n          <NativeBaseProvider>\r\n            <Center >\r\n                <Example  />\r\n            </Center>\r\n          </NativeBaseProvider>\r\n        );\r\n    };\r\n    "],"mappings":"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"},"metadata":{},"sourceType":"module"}