{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { NativeBaseProvider, Box, Text, Pressable, Checkbox, Heading, IconButton, HStack, Avatar, VStack, Spacer, Center, Button, Radio } from \"native-base\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport { onOpen, onClose } from \"../store-notification\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport NotificationModal from \"../Screens/NotificationModal\";\nimport axios from 'axios';\nimport { useFocusEffect } from '@react-navigation/native';\nimport requestBuilder from \"../../requestRebuilder  \";\nimport { loginFlagHandler, closeloginFlagHandler, componentsLoaderHandler } from \"../../FinalLayout/store-finalLayout\";\nimport Icon from '@expo/vector-icons/MaterialIcons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Example() {\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(1).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n\n  var _useState = useState(\"Basic\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  return _jsx(View, {\n    children: _jsx(ScrollView, {\n      refreshControl: _jsx(RefreshControl, {\n        colors: [\"#42f545\"],\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: _jsx(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        children: _jsx(Basic, {})\n      })\n    })\n  });\n}\n\nfunction Basic() {\n  var dispatch = useDispatch();\n  var dashboardStore = useSelector(function (state) {\n    return state.dashboard;\n  });\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listData = _useState4[0],\n      setListData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateNotification = _useState6[0],\n      setUpdateNotification = _useState6[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      ChangeFlag = _React$useState4[0],\n      setChangeFlag = _React$useState4[1];\n\n  useFocusEffect(React.useCallback(function () {\n    getData();\n  }, [ChangeFlag, updateNotification]));\n\n  function getData() {\n    var notificationData;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(componentsLoaderHandler());\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios(requestBuilder('notifications', '/notifications/receivers/:id', 'get', {\n              id: dashboardStore.userToken.userId\n            })));\n\n          case 3:\n            notificationData = _context.sent;\n            setListData(notificationData.data);\n            dispatch(componentsLoaderHandler());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var closeRow = function closeRow(rowMap, rowKey) {\n    if (rowMap[rowKey]) {\n      rowMap[rowKey].closeRow();\n    }\n  };\n\n  var deleteRow = function _callee(rowMap, rowKey) {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios(requestBuilder('notifications', '/notifications/delete/:id', 'delete', {\n              id: rowKey.id\n            })));\n\n          case 2:\n            setChangeFlag(!ChangeFlag);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onRowDidOpen = function onRowDidOpen(rowKey) {\n    console.log(\"This row opened\", rowKey);\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return _jsx(Box, {\n      shadow: 5,\n      style: {\n        borderWidth: .4,\n        borderColor: 'teal'\n      },\n      children: _jsx(Pressable, {\n        onPress: function onPress() {\n          return console.log(\"You touched me\");\n        },\n        _dark: {\n          bg: \"coolGray.800\"\n        },\n        _light: {\n          bg: \"white\"\n        },\n        children: function children(_ref2) {\n          var isHovered = _ref2.isHovered,\n              isFocused = _ref2.isFocused,\n              isPressed = _ref2.isPressed;\n          return _jsx(Box, {\n            pl: \"4\",\n            pr: \"5\",\n            py: \"2\",\n            bg: item.is_unread ? \"coolGray.300\" : isHovered ? \"coolGray.200\" : \"coolGray.100\",\n            style: {\n              transform: [{\n                scale: isPressed ? 1.08 : 1\n              }]\n            },\n            children: _jsxs(HStack, {\n              alignItems: \"center\",\n              space: 3,\n              children: [_jsx(Avatar, {\n                size: \"48px\",\n                source: {\n                  uri: \"https://cdn4.iconfinder.com/data/icons/professions-1-2/151/3-512.png\"\n                }\n              }), _jsxs(VStack, {\n                children: [_jsxs(Text, {\n                  color: \"coolGray.800\",\n                  _dark: {\n                    color: \"warmGray.50\"\n                  },\n                  bold: true,\n                  children: [\"Sender Name: \", item.sender_name]\n                }), _jsx(Text, {\n                  color: \"coolGray.600\",\n                  _dark: {\n                    color: \"warmGray.200\"\n                  },\n                  children: item.notification_subject\n                })]\n              }), _jsx(Spacer, {}), _jsx(Text, {\n                style: {\n                  position: 'absolute',\n                  right: 2\n                },\n                fontSize: \"xs\",\n                color: \"coolGray.800\",\n                _dark: {\n                  color: \"warmGray.50\"\n                },\n                alignSelf: \"flex-start\",\n                children: parseInt(item.createdAt.slice(11, 16)) + 3 + \": \" + item.createdAt.slice(13, 16)\n              })]\n            })\n          });\n        }\n      })\n    });\n  };\n\n  function ReadHandler(payload) {\n    return _regeneratorRuntime.async(function ReadHandler$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios(requestBuilder('notifications', '/notifications/updateUnread/:id', 'put', {\n              \"id\": payload.id,\n              \"is_unread\": !payload.is_unread\n            })));\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log('kkkkkkkkkkkkk', _context3.t0);\n\n          case 8:\n            setUpdateNotification(!updateNotification);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  var renderHiddenItem = function renderHiddenItem(data, rowMap) {\n    return _jsxs(HStack, {\n      flex: \"1\",\n      pl: \"2\",\n      children: [_jsx(Pressable, {\n        style: {\n          position: \"absolute\",\n          right: 0\n        },\n        w: \"70\",\n        h: \"70\",\n        cursor: \"pointer\",\n        bg: \"red.500\",\n        justifyContent: \"center\",\n        onPress: function onPress() {\n          return deleteRow(rowMap, data.item);\n        },\n        _pressed: {\n          opacity: 0.5\n        },\n        children: _jsx(VStack, {\n          alignItems: \"center\",\n          space: 2,\n          children: _jsx(Text, {\n            color: \"white\",\n            fontSize: \"xs\",\n            fontWeight: \"medium\",\n            children: \"Delete\"\n          })\n        })\n      }), _jsx(Pressable, {\n        style: {\n          position: \"absolute\",\n          left: 0\n        },\n        w: \"63\",\n        h: \"70\",\n        cursor: \"pointer\",\n        bg: \"#9BA3EB\",\n        justifyContent: \"center\",\n        children: _jsxs(VStack, {\n          alignItems: \"center\",\n          space: 2,\n          children: [data.item.is_flagged == true && _jsx(Checkbox, {\n            defaultIsChecked: true,\n            onPress: function _callee2() {\n              return _regeneratorRuntime.async(function _callee2$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return _regeneratorRuntime.awrap(axios(requestBuilder('notifications', '/notifications/updateFlag/:id', 'put', {\n                        \"id\": data.item.id,\n                        \"is_flagged\": !payload.is_flagged\n                      })));\n\n                    case 2:\n                      return _context4.abrupt(\"return\", _context4.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }\n          }), data.item.is_flagged == false && _jsx(Checkbox, {\n            onPress: function _callee3() {\n              return _regeneratorRuntime.async(function _callee3$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return _regeneratorRuntime.awrap(axios(requestBuilder('notifications', '/notifications/updateFlag/:id', 'put', {\n                        \"id\": data.item.id,\n                        \"is_flagged\": !data.item.is_flagged\n                      })));\n\n                    case 2:\n                      return _context5.abrupt(\"return\", _context5.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }\n          }), _jsx(Text, {\n            color: \"white\",\n            fontSize: \"xs\",\n            fontWeight: \"medium\",\n            children: \"FLAG\"\n          })]\n        })\n      }), _jsx(Pressable, {\n        style: {\n          position: \"absolute\",\n          left: 62\n        },\n        w: \"63\",\n        h: \"70\",\n        cursor: \"pointer\",\n        justifyContent: \"center\",\n        children: _jsxs(VStack, {\n          alignItems: \"center\",\n          space: 2,\n          children: [data.item.is_unread == true && _jsx(Button, {\n            h: \"70\",\n            style: {\n              width: 75,\n              borderColor: \"teal\",\n              borderWidth: 1\n            },\n            onPress: function onPress() {\n              return ReadHandler(data.item);\n            },\n            children: \"Read\"\n          }), data.item.is_unread == false && _jsx(Button, {\n            h: \"70\",\n            style: {\n              width: 75\n            },\n            onPress: function onPress() {\n              return ReadHandler(data.item);\n            },\n            children: \"UnRead\"\n          })]\n        })\n      })]\n    });\n  };\n\n  return _jsx(Box, {\n    bg: \"white\",\n    safeArea: true,\n    flex: \"1\",\n    shadow: 9,\n    children: _jsx(SwipeListView, {\n      data: listData,\n      renderItem: renderItem,\n      renderHiddenItem: renderHiddenItem,\n      rightOpenValue: -70,\n      leftOpenValue: 130,\n      previewRowKey: \"0\",\n      previewOpenValue: -40,\n      previewOpenDelay: 3000,\n      onRowDidOpen: onRowDidOpen\n    })\n  });\n}\n\nexport default (function (_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsxs(NativeBaseProvider, {\n    children: [_jsx(Example, {}), _jsx(NotificationModal, {}), _jsx(View, {\n      style: {\n        position: 'absolute',\n        right: 5,\n        bottom: 20\n      },\n      children: _jsxs(Button, {\n        onPress: function onPress() {\n          return navigation.navigate('createNotification');\n        },\n        bg: \"#2F8F9D\",\n        width: \"62\",\n        height: \"62\",\n        style: {\n          borderRadius: 100\n        },\n        children: [_jsx(Icon, {\n          style: {\n            fontSize: 37,\n            paddingTop: 9,\n            color: \"#F9F3EE\"\n          },\n          name: \"add-alert\"\n        }), \" \"]\n      })\n    })]\n  });\n});","map":{"version":3,"names":["React","useState","useEffect","NativeBaseProvider","Box","Text","Pressable","Checkbox","Heading","IconButton","HStack","Avatar","VStack","Spacer","Center","Button","Radio","SwipeListView","onOpen","onClose","useDispatch","useSelector","NotificationModal","axios","useFocusEffect","requestBuilder","loginFlagHandler","closeloginFlagHandler","componentsLoaderHandler","Icon","Example","wait","timeout","Promise","resolve","setTimeout","refreshing","setRefreshing","onRefresh","useCallback","then","mode","setMode","Basic","dispatch","dashboardStore","state","dashboard","listData","setListData","updateNotification","setUpdateNotification","ChangeFlag","setChangeFlag","getData","id","userToken","userId","notificationData","data","closeRow","rowMap","rowKey","deleteRow","onRowDidOpen","console","log","renderItem","item","index","borderWidth","borderColor","bg","isHovered","isFocused","isPressed","is_unread","transform","scale","uri","color","sender_name","notification_subject","position","right","parseInt","createdAt","slice","ReadHandler","payload","renderHiddenItem","opacity","left","is_flagged","width","navigation","bottom","navigate","borderRadius","fontSize","paddingTop"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/apps/laser-avenue77/src/Notification/Screens/test.js"],"sourcesContent":["import React, { useState ,useEffect} from \"react\";\r\nimport { Dimensions, TouchableOpacity, View ,ScrollView ,RefreshControl} from \"react-native\";\r\nimport { NativeBaseProvider, Box, Text, Pressable,Checkbox ,Heading, IconButton, HStack, Avatar, VStack, Spacer, Center,Button,Radio } from \"native-base\";\r\nimport { SwipeListView } from \"react-native-swipe-list-view\";\r\n// import { MaterialIcons, Ionicons, Entypo } from \"@expo/vector-icons\";\r\nimport {onOpen,onClose} from '../store-notification'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport NotificationModal from '../Screens/NotificationModal'\r\nimport axios from 'axios'\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport requestBuilder from '../../requestRebuilder  '\r\nimport {loginFlagHandler,closeloginFlagHandler,componentsLoaderHandler} from '../../FinalLayout/store-finalLayout'\r\nimport Icon from '@expo/vector-icons/MaterialIcons';\r\n\r\n\r\nfunction Example() {\r\n  const wait = (timeout) => {\r\n    return new Promise((resolve) => setTimeout(resolve, timeout));\r\n  };\r\n  \r\n  const [refreshing, setRefreshing] = React.useState(false);\r\n\r\n  const onRefresh = React.useCallback(() => {\r\n    setRefreshing(true);\r\n    wait(1).then(() => setRefreshing(false));\r\n  }, []);\r\n\r\n  const [mode, setMode] = useState(\"Basic\");\r\n  return <View >\r\n  \r\n  <ScrollView  refreshControl={\r\n        <RefreshControl colors={[\"#42f545\"]} refreshing={refreshing} onRefresh={onRefresh} />\r\n      }>\r\n\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <Basic />\r\n        </ScrollView>\r\n        </ScrollView>\r\n\r\n  </View>\r\n  \r\n}\r\n\r\nfunction Basic() {\r\n  const dispatch = useDispatch();\r\n  const dashboardStore = useSelector(state => state.dashboard);\r\n  const [listData, setListData] = useState([]);\r\n  const [updateNotification, setUpdateNotification] = useState([]);\r\n  const [ChangeFlag, setChangeFlag] = React.useState(false);\r\n\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      getData()\r\n    }, [ChangeFlag,updateNotification])\r\n  );\r\n\r\n  async function getData() {\r\n    dispatch(componentsLoaderHandler())\r\n    const notificationData= await axios(requestBuilder('notifications','/notifications/receivers/:id','get',{id:dashboardStore.userToken.userId}))\r\n    setListData(notificationData.data)\r\n    dispatch(componentsLoaderHandler())\r\n    \r\n  }\r\n  \r\n\r\n  const closeRow = (rowMap, rowKey) => {\r\n    if (rowMap[rowKey]) {\r\n      rowMap[rowKey].closeRow();\r\n    }\r\n  };\r\n\r\n\r\n  const deleteRow =async (rowMap, rowKey) => {\r\n \r\n    // closeRow(rowMap, rowKey.key);\r\n    // const newData = [...listData];\r\n    // const prevIndex = listData.findIndex(item => item.key === rowKey.key+1);\r\n    // newData.splice(prevIndex, 1);\r\n    // setListData(newData);\r\n    await axios(requestBuilder('notifications','/notifications/delete/:id','delete',{id:rowKey.id}))\r\n    setChangeFlag(!ChangeFlag)\r\n  };\r\n  const onRowDidOpen = rowKey => {\r\n    console.log(\"This row opened\", rowKey);\r\n  };\r\n\r\n \r\n  const renderItem = ({\r\n    item,\r\n    index\r\n  }) => <Box shadow={5} style={{borderWidth:.4,borderColor:'teal'}}>\r\n      <Pressable onPress={() => console.log(\"You touched me\")} _dark={{\r\n      bg: \"coolGray.800\"\r\n    }} _light={{\r\n      bg: \"white\"\r\n    }}>\r\n        {({\r\n        isHovered,\r\n        isFocused,\r\n        isPressed\r\n      }) => { return  <Box pl=\"4\" pr=\"5\" py=\"2\"  bg={item.is_unread ? \"coolGray.300\" : isHovered ? \"coolGray.200\" : \"coolGray.100\"} style={{\r\n        transform: [{\r\n          scale: isPressed ? 1.08 : 1\r\n        }],\r\n\r\n      }} >\r\n          <HStack alignItems=\"center\" space={3}>\r\n            <Avatar size=\"48px\" source={{\r\n            uri: \"https://cdn4.iconfinder.com/data/icons/professions-1-2/151/3-512.png\"\r\n          }} />\r\n            <VStack>\r\n              <Text color=\"coolGray.800\" _dark={{\r\n              color: \"warmGray.50\"\r\n            }} bold>\r\n                Sender Name: {item.sender_name}\r\n              </Text>\r\n              <Text color=\"coolGray.600\" _dark={{\r\n              color: \"warmGray.200\"\r\n            }}>\r\n                {item.notification_subject}\r\n              </Text>\r\n            </VStack>\r\n            <Spacer />\r\n            <Text style={{position:'absolute',right:2}} fontSize=\"xs\" color=\"coolGray.800\" _dark={{\r\n            color: \"warmGray.50\"\r\n          }} alignSelf=\"flex-start\">\r\n              {`${parseInt(item.createdAt.slice(11,16)) +3}: ${item.createdAt.slice(13,16)}` }\r\n            </Text>\r\n          </HStack>\r\n        </Box>}}\r\n      </Pressable>\r\n    </Box>;\r\n\r\nasync function ReadHandler(payload) {\r\n\r\n     try {\r\n      await axios(requestBuilder('notifications','/notifications/updateUnread/:id','put',{\r\n        \"id\":payload.id,\r\n        \"is_unread\":!payload.is_unread\r\n    }))\r\n       \r\n     } catch (error) {\r\n      console.log('kkkkkkkkkkkkk',error); \r\n       \r\n     }\r\nsetUpdateNotification(!updateNotification)\r\n    \r\n    }\r\n\r\n  const renderHiddenItem = (data, rowMap) => <HStack flex=\"1\" pl=\"2\" >\r\n    \r\n{/* //////////\r\n    <Pressable w=\"70\" ml=\"auto\" cursor=\"pointer\" bg=\"coolGray.200\" justifyContent=\"center\" onPress={() => dispatch(onOpen())} _pressed={{\r\n      opacity: 0.5\r\n    }}>\r\n        <VStack alignItems=\"center\" space={2}>\r\n          {/* <Icon as={<Entypo name=\"dots-three-horizontal\" />} size=\"xs\" color=\"coolGray.800\" /> */}\r\n          {/* <Text fontSize=\"xs\" fontWeight=\"medium\" color=\"coolGray.800\">\r\n            More\r\n          </Text>\r\n        </VStack>\r\n        \r\n  </Pressable>  */}\r\n\r\n\r\n      <Pressable style={{position:\"absolute\",right:0}} w=\"70\" h=\"70\" cursor=\"pointer\" bg=\"red.500\" justifyContent=\"center\" onPress={() => deleteRow(rowMap, data.item)} _pressed={{\r\n      opacity: 0.5\r\n    }}>\r\n        <VStack alignItems=\"center\" space={2}>\r\n          {/* <Icon as={<MaterialIcons name=\"delete\" />} color=\"white\" size=\"xs\" /> */}\r\n          <Text color=\"white\" fontSize=\"xs\" fontWeight=\"medium\">\r\n            Delete\r\n          </Text>\r\n        </VStack>\r\n      </Pressable>\r\n      {/* //////////////////////////////////// */}\r\n      <Pressable style={{position:\"absolute\",left:0}} w=\"63\" h=\"70\" cursor=\"pointer\" bg=\"#9BA3EB\" justifyContent=\"center\" >\r\n        <VStack alignItems=\"center\" space={2}>\r\n          {/* <Icon as={<MaterialIcons name=\"delete\" />} color=\"white\" size=\"xs\" /> */}\r\n      { data.item.is_flagged==true &&     <Checkbox    defaultIsChecked onPress={async ()=>   await axios(requestBuilder('notifications','/notifications/updateFlag/:id','put',{\r\n        \"id\":data.item.id,\r\n        \"is_flagged\":!payload.is_flagged\r\n    }))  }   />}\r\n      {  data.item.is_flagged==false &&   <Checkbox     onPress={async ()=>   await axios(requestBuilder('notifications','/notifications/updateFlag/:id','put',{\r\n        \"id\":data.item.id,\r\n        \"is_flagged\":!data.item.is_flagged\r\n    })) }   />}\r\n     \r\n          <Text color=\"white\" fontSize=\"xs\" fontWeight=\"medium\">\r\n            FLAG\r\n          </Text>\r\n        </VStack>\r\n      </Pressable>\r\n      {/* ////////////////////////////////////////////////// */}\r\n      <Pressable style={{position:\"absolute\",left:62}} w=\"63\" h=\"70\" cursor=\"pointer\"  justifyContent=\"center\" >\r\n        <VStack alignItems=\"center\" space={2}>\r\n          {/* <Icon as={<MaterialIcons name=\"delete\" />} color=\"white\" size=\"xs\" /> */}\r\n    {   data.item.is_unread==true &&     <Button  h=\"70\" style={{width:75,borderColor:\"teal\",borderWidth:1}}  onPress={ ()=> ReadHandler(data.item)  }   >Read</Button>}\r\n    {    data.item.is_unread==false &&      <Button  h=\"70\" style={{width:75}}  onPress={ ()=> ReadHandler(data.item)}  >UnRead</Button>}\r\n\r\n\r\n          {/* <Text color=\"white\" fontSize=\"xs\" fontWeight=\"medium\">\r\n            READ\r\n          </Text> */}\r\n        </VStack>\r\n      </Pressable>\r\n    </HStack>;\r\n  return <Box bg=\"white\" safeArea flex=\"1\" shadow={9}>\r\n      <SwipeListView data={listData} renderItem={renderItem} renderHiddenItem={renderHiddenItem} rightOpenValue={-70} leftOpenValue={130} previewRowKey={\"0\"} previewOpenValue={-40} previewOpenDelay={3000} onRowDidOpen={onRowDidOpen} />\r\n    </Box>\r\n}\r\n  export default ({navigation}) => {\r\n   \r\n        return (\r\n          <NativeBaseProvider>\r\n                <Example />\r\n       \r\n              <NotificationModal/>\r\n              <View  style={{position:'absolute',right:5,bottom:20,}}>\r\n         <Button onPress={()=>navigation.navigate('createNotification')} bg=\"#2F8F9D\"  width=\"62\" height=\"62\"  style={{borderRadius:100}}  ><Icon  style={{fontSize:37,paddingTop:9,color:\"#F9F3EE\"}} name=\"add-alert\"/> </Button>\r\n         </View>\r\n     \r\n          </NativeBaseProvider>\r\n        );\r\n    };"],"mappings":"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"},"metadata":{},"sourceType":"module"}