{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { Button, Modal, FormControl, IconButton, Center, NativeBaseProvider, Text } from \"native-base\";\nimport { useState } from \"react\";\nimport { settingsHandler, closeloginFlagHandler } from \"./store-finalLayout\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Icon from '@expo/vector-icons/FontAwesome';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Example = function Example() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var layoutSore = useSelector(function (state) {\n    return state.finalLayoutStore;\n  });\n  var dispatch = useDispatch();\n\n  function logoutHandler() {\n    dispatch(closeloginFlagHandler());\n    dispatch(settingsHandler());\n    navigation.navigate('SignIn');\n  }\n\n  return _jsx(Center, {\n    children: _jsx(Modal, {\n      isOpen: layoutSore.settingsFlag,\n      onClose: function onClose() {\n        return dispatch(settingsHandler());\n      },\n      children: _jsxs(Modal.Content, {\n        maxWidth: \"400px\",\n        children: [_jsx(Modal.CloseButton, {}), _jsx(Modal.Header, {\n          children: \"Settings\"\n        }), _jsx(Modal.Body, {\n          children: _jsx(Text, {\n            children: \"Are you sure you want to log out ?\"\n          })\n        }), _jsx(Modal.Footer, {\n          children: _jsxs(Button.Group, {\n            space: 2,\n            children: [_jsx(Button, {\n              variant: \"ghost\",\n              colorScheme: \"blueGray\",\n              onPress: function onPress() {\n                dispatch(settingsHandler());\n              },\n              children: \"Cancel\"\n            }), _jsx(Button, {\n              style: {\n                width: 85\n              },\n              onPress: function onPress() {\n                return logoutHandler();\n              },\n              children: _jsx(Icon, {\n                style: {\n                  color: \"white\"\n                },\n                name: \"external-link\",\n                _dark: {},\n                children: _jsx(Text, {\n                  style: {\n                    color: \"white\"\n                  },\n                  children: \"Logout\"\n                })\n              })\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 1,\n      px: \"3\",\n      children: _jsx(Example, {})\n    })\n  });\n});","map":{"version":3,"names":["React","Button","Modal","FormControl","IconButton","Center","NativeBaseProvider","Text","useState","settingsHandler","closeloginFlagHandler","useDispatch","useSelector","Icon","useNavigation","Example","navigation","showModal","setShowModal","layoutSore","state","finalLayoutStore","dispatch","logoutHandler","navigate","settingsFlag","width","color"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/apps/laser-avenue77/src/FinalLayout/SettingsModal.js"],"sourcesContent":["\r\n\r\nimport React from \"react\";\r\nimport { Button, Modal, FormControl, IconButton, Center, NativeBaseProvider,Text } from \"native-base\";\r\nimport { useState } from \"react\";\r\nimport {settingsHandler,closeloginFlagHandler} from './store-finalLayout'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Icon from '@expo/vector-icons/FontAwesome';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Example = () => {\r\n    const navigation = useNavigation();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const layoutSore = useSelector(state => state.finalLayoutStore);\r\n  const dispatch = useDispatch();\r\n\r\n  function logoutHandler() {\r\n    dispatch(closeloginFlagHandler())\r\n    dispatch(settingsHandler())\r\n    navigation.navigate('SignIn')\r\n  }\r\n\r\n  return <Center>\r\n   \r\n      <Modal isOpen={layoutSore.settingsFlag} onClose={() =>dispatch(settingsHandler())}>\r\n        <Modal.Content maxWidth=\"400px\">\r\n          <Modal.CloseButton />\r\n          <Modal.Header>Settings</Modal.Header>\r\n          <Modal.Body>\r\n           <Text>Are you sure you want to log out ?</Text>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button.Group space={2}>\r\n              <Button variant=\"ghost\" colorScheme=\"blueGray\" onPress={() => {\r\n             dispatch(settingsHandler())\r\n            }}>\r\n                Cancel\r\n              </Button>\r\n              <Button style={{width:85}} onPress={() => \r\n                  logoutHandler()\r\n          \r\n            }>\r\n          <Icon style={{ color: \"white\"}}   name=\"external-link\" _dark={{\r\n         \r\n        }} ><Text style={{ color: \"white\"}} >Logout</Text></Icon>\r\n                \r\n              </Button>\r\n            </Button.Group>\r\n          </Modal.Footer>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </Center>;\r\n};\r\n\r\n    export default () => {\r\n        return (\r\n          <NativeBaseProvider>\r\n            <Center flex={1} px=\"3\">\r\n                <Example  />\r\n            </Center>\r\n          </NativeBaseProvider>\r\n        );\r\n    };\r\n    "],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,UAArC,EAAiDC,MAAjD,EAAyDC,kBAAzD,EAA4EC,IAA5E,QAAwF,aAAxF;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,eAAR,EAAwBC,qBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EAClB,IAAMC,UAAU,GAAGF,aAAa,EAAhC;;EACF,gBAAkCN,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOS,SAAP;EAAA,IAAkBC,YAAlB;;EACA,IAAMC,UAAU,GAAGP,WAAW,CAAC,UAAAQ,KAAK;IAAA,OAAIA,KAAK,CAACC,gBAAV;EAAA,CAAN,CAA9B;EACA,IAAMC,QAAQ,GAAGX,WAAW,EAA5B;;EAEA,SAASY,aAAT,GAAyB;IACvBD,QAAQ,CAACZ,qBAAqB,EAAtB,CAAR;IACAY,QAAQ,CAACb,eAAe,EAAhB,CAAR;IACAO,UAAU,CAACQ,QAAX,CAAoB,QAApB;EACD;;EAED,OAAO,KAAC,MAAD;IAAA,UAEH,KAAC,KAAD;MAAO,MAAM,EAAEL,UAAU,CAACM,YAA1B;MAAwC,OAAO,EAAE;QAAA,OAAKH,QAAQ,CAACb,eAAe,EAAhB,CAAb;MAAA,CAAjD;MAAA,UACE,MAAC,KAAD,CAAO,OAAP;QAAe,QAAQ,EAAC,OAAxB;QAAA,WACE,KAAC,KAAD,CAAO,WAAP,KADF,EAEE,KAAC,KAAD,CAAO,MAAP;UAAA;QAAA,EAFF,EAGE,KAAC,KAAD,CAAO,IAAP;UAAA,UACC,KAAC,IAAD;YAAA;UAAA;QADD,EAHF,EAME,KAAC,KAAD,CAAO,MAAP;UAAA,UACE,MAAC,MAAD,CAAQ,KAAR;YAAc,KAAK,EAAE,CAArB;YAAA,WACE,KAAC,MAAD;cAAQ,OAAO,EAAC,OAAhB;cAAwB,WAAW,EAAC,UAApC;cAA+C,OAAO,EAAE,mBAAM;gBAC/Da,QAAQ,CAACb,eAAe,EAAhB,CAAR;cACA,CAFC;cAAA;YAAA,EADF,EAME,KAAC,MAAD;cAAQ,KAAK,EAAE;gBAACiB,KAAK,EAAC;cAAP,CAAf;cAA2B,OAAO,EAAE;gBAAA,OAChCH,aAAa,EADmB;cAAA,CAApC;cAAA,UAIJ,KAAC,IAAD;gBAAM,KAAK,EAAE;kBAAEI,KAAK,EAAE;gBAAT,CAAb;gBAAkC,IAAI,EAAC,eAAvC;gBAAuD,KAAK,EAAE,EAA9D;gBAAA,UAEE,KAAC,IAAD;kBAAM,KAAK,EAAE;oBAAEA,KAAK,EAAE;kBAAT,CAAb;kBAAA;gBAAA;cAFF;YAJI,EANF;UAAA;QADF,EANF;MAAA;IADF;EAFG,EAAP;AA8BD,CA1CD;;AA4CI,gBAAe,YAAM;EACjB,OACE,KAAC,kBAAD;IAAA,UACE,KAAC,MAAD;MAAQ,IAAI,EAAE,CAAd;MAAiB,EAAE,EAAC,GAApB;MAAA,UACI,KAAC,OAAD;IADJ;EADF,EADF;AAOH,CARD"},"metadata":{},"sourceType":"module"}