{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Heading, VStack, FormControl, Input, Button, Center, NativeBaseProvider, Select, CheckIcon, WarningOutlineIcon, TextArea, IconButton, Checkbox, HStack, ScrollView } from \"native-base\";\nimport axios from 'axios';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport requestRebuilder from \"../../requestRebuilder  \";\nimport UsersModal from \"./usersModal\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { notificationStore, saveUsers } from \"../store-notification\";\nimport { onOpenUsers, onCloseUsers } from \"../store-notification\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Example = function Example(_ref) {\n  var navigation = _ref.navigation;\n  var storeNotification = useSelector(function (state) {\n    return state.notification;\n  });\n  var dashboardStore = useSelector(function (state) {\n    return state.dashboard;\n  });\n\n  var _useState = useState({\n    \"sender_id\": dashboardStore.userToken.userId,\n    \"user_image\": \"\",\n    \"notification_type\": 1,\n    \"sender_name\": dashboardStore.userToken.firstName,\n    \"notification_status\": \"Soft\",\n    \"channels\": [{\n      \"channel_type\": 1\n    }],\n    \"notification_subject\": \"ge ge wellplayed \",\n    \"notification_description\": \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsu\",\n    \"users\": storeNotification.selectedUsers,\n    \"profileIds\": []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      createForm = _useState2[0],\n      setCreateForm = _useState2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    getUsers();\n  }, []);\n  useEffect(function () {\n    console.log('createFormcreateForm', createForm);\n  }, [createForm]);\n\n  function getUsers() {\n    var res;\n    return _regeneratorRuntime.async(function getUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios(requestRebuilder('ciam', \"/v1/users\", \"get\")));\n\n          case 2:\n            res = _context.sent;\n            dispatch(saveUsers(res.data));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function CreateNotiHandler() {\n    return _regeneratorRuntime.async(function CreateNotiHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios(requestRebuilder('notifications', \"/notifications/create\", \"post\", _objectSpread(_objectSpread({}, createForm), {}, {\n              \"users\": storeNotification.selectedUsers\n            }))).then(function () {\n              return navigation.navigate('test');\n            }));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log('00000000000000', _context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  return _jsx(Center, {\n    w: \"100%\",\n    children: _jsxs(Box, {\n      safeArea: true,\n      p: \"2\",\n      w: \"90%\",\n      maxW: \"290\",\n      py: \"8\",\n      children: [_jsx(Heading, {\n        size: \"lg\",\n        color: \"coolGray.800\",\n        _dark: {\n          color: \"warmGray.50\"\n        },\n        fontWeight: \"semibold\",\n        children: \"Create Notification\"\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: \"5\",\n        children: [_jsxs(FormControl, {\n          isRequired: true,\n          children: [_jsx(FormControl.Label, {\n            children: \"Subject\"\n          }), _jsx(Input, {\n            onChangeText: function onChangeText(value) {\n              return setCreateForm(_objectSpread(_objectSpread({}, createForm), {}, {\n                \"notification_subject\": value\n              }));\n            }\n          })]\n        }), _jsxs(FormControl, {\n          isRequired: true,\n          children: [_jsx(FormControl.Label, {\n            children: \"Description\"\n          }), _jsx(TextArea, {\n            onChangeText: function onChangeText(value) {\n              return setCreateForm(_objectSpread(_objectSpread({}, createForm), {}, {\n                \"notification_description\": value\n              }));\n            },\n            h: \"180\"\n          })]\n        }), _jsxs(FormControl, {\n          w: \"3/4\",\n          maxW: \"300\",\n          isRequired: true,\n          isInvalid: true,\n          children: [_jsx(FormControl.Label, {\n            children: \"Choose Users\"\n          }), _jsx(Button, {\n            w: \"140\",\n            bg: \"#2F8F9D\",\n            onPress: function onPress() {\n              return dispatch(onOpenUsers());\n            },\n            children: \"Choose Users\"\n          }), _jsx(FormControl.ErrorMessage, {\n            leftIcon: _jsx(WarningOutlineIcon, {\n              size: \"xs\"\n            }),\n            children: \"Please make a selection!\"\n          })]\n        }), _jsx(Center, {\n          mt: \"50\",\n          children: _jsx(Button, {\n            onPress: function onPress() {\n              return CreateNotiHandler();\n            },\n            w: \"100\",\n            bg: \"#FF4949\",\n            children: \"Create\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default (function (_ref2) {\n  var navigation = _ref2.navigation;\n  var storeNotification = useSelector(function (state) {\n    return state.notification;\n  });\n  return _jsx(ScrollView, {\n    children: _jsxs(Center, {\n      flex: 1,\n      px: \"3\",\n      children: [_jsx(Example, {\n        navigation: navigation\n      }), storeNotification.users.length && _jsx(UsersModal, {})]\n    })\n  });\n});","map":{"version":3,"names":["React","useEffect","useState","Box","Heading","VStack","FormControl","Input","Button","Center","NativeBaseProvider","Select","CheckIcon","WarningOutlineIcon","TextArea","IconButton","Checkbox","HStack","ScrollView","axios","requestRebuilder","UsersModal","useDispatch","useSelector","notificationStore","saveUsers","onOpenUsers","onCloseUsers","Example","navigation","storeNotification","state","notification","dashboardStore","dashboard","userToken","userId","firstName","selectedUsers","createForm","setCreateForm","dispatch","getUsers","console","log","res","data","CreateNotiHandler","then","navigate","color","value","users","length"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/apps/laser-avenue77/src/Notification/Screens/createNotification.js"],"sourcesContent":["import React,{useEffect,useState} from \"react\";\r\nimport { Box, Heading, VStack, FormControl, Input, Button, Center, NativeBaseProvider,Select, CheckIcon, WarningOutlineIcon,TextArea, IconButton, Checkbox, HStack, ScrollView  } from \"native-base\";\r\nimport axios from 'axios'\r\nimport {Text} from 'react-native'\r\nimport requestRebuilder  from '../../requestRebuilder  '\r\nimport UsersModal from './usersModal'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {notificationStore, saveUsers} from \"../store-notification\"\r\nimport {onOpenUsers,onCloseUsers} from '../store-notification'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Example = ({navigation}) => {\r\n  \r\n    \r\n    const storeNotification = useSelector(state => state.notification);\r\n    const dashboardStore = useSelector(state => state.dashboard);\r\n \r\n    const [createForm,setCreateForm]=useState({\r\n    \r\n      \"sender_id\":dashboardStore.userToken.userId,\r\n      \"user_image\":\"\",\r\n      \"notification_type\":1,\r\n      \"sender_name\":dashboardStore.userToken.firstName,\r\n      \"notification_status\":\"Soft\",\r\n      \"channels\":[\r\n          {\"channel_type\":1}\r\n      ],\r\n      \"notification_subject\":\"ge ge wellplayed \",\r\n      \"notification_description\":\"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsu\",\r\n          \"users\":storeNotification.selectedUsers,\r\n      \"profileIds\":[]\r\n    \r\n    })\r\n\r\n    \r\n\r\n\r\n///////////////////////////////////\r\n\r\n///////////////////////////////////////\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        getUsers()       \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n     console.log('createFormcreateForm',createForm);    \r\n  }, [createForm])\r\n\r\n\r\n    async function getUsers() {\r\n        const res= await axios(requestRebuilder('ciam',\"/v1/users\",\"get\"))\r\n        dispatch(saveUsers(res.data))\r\n    \r\n    }\r\n\r\n  async function CreateNotiHandler() {\r\n      try {\r\n        await axios(requestRebuilder('notifications',\"/notifications/create\",\"post\",{...createForm, \"users\":storeNotification.selectedUsers})).then(()=>navigation.navigate('test'))\r\n          \r\n      } catch (error) {\r\n          console.log('00000000000000',error);\r\n      }\r\n\r\n\r\n    }\r\n    \r\n \r\n  return <Center w=\"100%\">\r\n      <Box safeArea p=\"2\" w=\"90%\" maxW=\"290\" py=\"8\">\r\n        <Heading size=\"lg\" color=\"coolGray.800\" _dark={{\r\n        color: \"warmGray.50\"\r\n      }} fontWeight=\"semibold\">\r\n          Create Notification \r\n        </Heading>\r\n   \r\n        <VStack space={3} mt=\"5\">\r\n          <FormControl  isRequired >\r\n            <FormControl.Label>Subject</FormControl.Label>\r\n            <Input onChangeText={(value)=>setCreateForm({...createForm, \"notification_subject\":value})} />\r\n          </FormControl>\r\n          <FormControl isRequired>\r\n            <FormControl.Label  >Description</FormControl.Label>\r\n            <TextArea  onChangeText={(value)=>setCreateForm({...createForm, \"notification_description\":value})} h=\"180\"  />\r\n          </FormControl>\r\n          <FormControl w=\"3/4\" maxW=\"300\" isRequired isInvalid>\r\n        <FormControl.Label>Choose Users</FormControl.Label>\r\n\r\n                  <Button  w=\"140\" bg=\"#2F8F9D\" onPress={()=>dispatch(onOpenUsers())}>Choose Users</Button>\r\n        <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\r\n          Please make a selection!\r\n        </FormControl.ErrorMessage>\r\n       \r\n      </FormControl>\r\n      <Center mt=\"50\">\r\n        <Button onPress={()=>CreateNotiHandler()} w=\"100\" bg=\"#FF4949\">Create</Button>\r\n        </Center>\r\n        </VStack>\r\n      </Box>\r\n    </Center>;\r\n};\r\n\r\n    export default ({navigation}) => {\r\n        const storeNotification = useSelector(state => state.notification);\r\n        return (\r\n          <ScrollView>\r\n            <Center flex={1} px=\"3\">\r\n                <Example navigation={navigation} />\r\n               {storeNotification.users.length&& <UsersModal  />}\r\n            </Center>\r\n          </ScrollView>\r\n        );\r\n    };"],"mappings":"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"},"metadata":{},"sourceType":"module"}