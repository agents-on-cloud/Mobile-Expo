{"ast":null,"code":"\"use strict\";\n\nfunction dedent(strings) {\n  var raw = undefined;\n\n  if (typeof strings === \"string\") {\n    raw = [strings];\n  } else {\n    raw = strings.raw;\n  }\n\n  var result = \"\";\n\n  for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < raw.length; i++) {\n    result += raw[i].replace(/\\\\\\n[ \\t]*/g, \"\").replace(/\\\\`/g, \"`\");\n\n    if (i < values.length) {\n      result += values[i];\n    }\n  }\n\n  result = result.trim();\n  var lines = result.split(\"\\n\");\n  var mindent = null;\n  lines.forEach(function (l) {\n    var m = l.match(/^ +/);\n\n    if (m) {\n      var indent = m[0].length;\n\n      if (!mindent) {\n        mindent = indent;\n      } else {\n        mindent = Math.min(mindent, indent);\n      }\n    }\n  });\n\n  if (mindent !== null) {\n    result = lines.map(function (l) {\n      return l[0] === \" \" ? l.slice(mindent) : l;\n    }).join(\"\\n\");\n  }\n\n  return result.replace(/\\\\n/g, \"\\n\");\n}\n\nif (typeof module !== \"undefined\") {\n  module.exports = dedent;\n}","map":{"version":3,"names":["dedent","strings","raw","undefined","result","_len","arguments","length","values","Array","_key","i","replace","trim","lines","split","mindent","forEach","l","m","match","indent","Math","min","map","slice","join","module","exports"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/node_modules/react-native-safe-modules/node_modules/dedent/dist/dedent.js"],"sourcesContent":["\"use strict\";\n\nfunction dedent(strings) {\n\n  var raw = undefined;\n  if (typeof strings === \"string\") {\n    // dedent can be used as a plain function\n    raw = [strings];\n  } else {\n    raw = strings.raw;\n  }\n\n  // first, perform interpolation\n  var result = \"\";\n\n  for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < raw.length; i++) {\n    result += raw[i].\n    // join lines when there is a suppressed newline\n    replace(/\\\\\\n[ \\t]*/g, \"\").\n\n    // handle escaped backticks\n    replace(/\\\\`/g, \"`\");\n\n    if (i < values.length) {\n      result += values[i];\n    }\n  }\n\n  // dedent eats leading and trailing whitespace too\n  result = result.trim();\n\n  // now strip indentation\n  var lines = result.split(\"\\n\");\n  var mindent = null;\n  lines.forEach(function (l) {\n    var m = l.match(/^ +/);\n    if (m) {\n      var indent = m[0].length;\n      if (!mindent) {\n        // this is the first indented line\n        mindent = indent;\n      } else {\n        mindent = Math.min(mindent, indent);\n      }\n    }\n  });\n\n  if (mindent !== null) {\n    result = lines.map(function (l) {\n      return l[0] === \" \" ? l.slice(mindent) : l;\n    }).join(\"\\n\");\n  }\n\n  // handle escaped newlines at the end to ensure they don't get stripped too\n  return result.replace(/\\\\n/g, \"\\n\");\n}\n\nif (typeof module !== \"undefined\") {\n  module.exports = dedent;\n}"],"mappings":"AAAA;;AAEA,SAASA,MAAT,CAAgBC,OAAhB,EAAyB;EAEvB,IAAIC,GAAG,GAAGC,SAAV;;EACA,IAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;IAE/BC,GAAG,GAAG,CAACD,OAAD,CAAN;EACD,CAHD,MAGO;IACLC,GAAG,GAAGD,OAAO,CAACC,GAAd;EACD;;EAGD,IAAIE,MAAM,GAAG,EAAb;;EAEA,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,MAAM,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAvB,CAA3C,EAAsEK,IAAI,GAAG,CAAlF,EAAqFA,IAAI,GAAGL,IAA5F,EAAkGK,IAAI,EAAtG,EAA0G;IACxGF,MAAM,CAACE,IAAI,GAAG,CAAR,CAAN,GAAmBJ,SAAS,CAACI,IAAD,CAA5B;EACD;;EAED,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,GAAG,CAACK,MAAxB,EAAgCI,CAAC,EAAjC,EAAqC;IACnCP,MAAM,IAAIF,GAAG,CAACS,CAAD,CAAH,CAEVC,OAFU,CAEF,aAFE,EAEa,EAFb,EAKVA,OALU,CAKF,MALE,EAKM,GALN,CAAV;;IAOA,IAAID,CAAC,GAAGH,MAAM,CAACD,MAAf,EAAuB;MACrBH,MAAM,IAAII,MAAM,CAACG,CAAD,CAAhB;IACD;EACF;;EAGDP,MAAM,GAAGA,MAAM,CAACS,IAAP,EAAT;EAGA,IAAIC,KAAK,GAAGV,MAAM,CAACW,KAAP,CAAa,IAAb,CAAZ;EACA,IAAIC,OAAO,GAAG,IAAd;EACAF,KAAK,CAACG,OAAN,CAAc,UAAUC,CAAV,EAAa;IACzB,IAAIC,CAAC,GAAGD,CAAC,CAACE,KAAF,CAAQ,KAAR,CAAR;;IACA,IAAID,CAAJ,EAAO;MACL,IAAIE,MAAM,GAAGF,CAAC,CAAC,CAAD,CAAD,CAAKZ,MAAlB;;MACA,IAAI,CAACS,OAAL,EAAc;QAEZA,OAAO,GAAGK,MAAV;MACD,CAHD,MAGO;QACLL,OAAO,GAAGM,IAAI,CAACC,GAAL,CAASP,OAAT,EAAkBK,MAAlB,CAAV;MACD;IACF;EACF,CAXD;;EAaA,IAAIL,OAAO,KAAK,IAAhB,EAAsB;IACpBZ,MAAM,GAAGU,KAAK,CAACU,GAAN,CAAU,UAAUN,CAAV,EAAa;MAC9B,OAAOA,CAAC,CAAC,CAAD,CAAD,KAAS,GAAT,GAAeA,CAAC,CAACO,KAAF,CAAQT,OAAR,CAAf,GAAkCE,CAAzC;IACD,CAFQ,EAENQ,IAFM,CAED,IAFC,CAAT;EAGD;;EAGD,OAAOtB,MAAM,CAACQ,OAAP,CAAe,MAAf,EAAuB,IAAvB,CAAP;AACD;;AAED,IAAI,OAAOe,MAAP,KAAkB,WAAtB,EAAmC;EACjCA,MAAM,CAACC,OAAP,GAAiB5B,MAAjB;AACD"},"metadata":{},"sourceType":"script"}