{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var notificationStore = createSlice({\n  name: 'notification',\n  initialState: {\n    value: 66,\n    modalFlag: false,\n    modalFlagUsers: false,\n    users: [],\n    selectedUsers: []\n  },\n  reducers: {\n    increment: function increment(state, action) {\n      state.value = state.value + action.payload;\n    },\n    onOpen: function onOpen(state, actions) {\n      state.modalFlag = true;\n    },\n    onClose: function onClose(state, actions) {\n      state.modalFlag = false;\n    },\n    onOpenUsers: function onOpenUsers(state, actions) {\n      state.modalFlagUsers = true;\n    },\n    onCloseUsers: function onCloseUsers(state, actions) {\n      state.modalFlagUsers = false;\n    },\n    saveUsers: function saveUsers(state, actions) {\n      var usersNames = [];\n\n      for (var i = 0; i < actions.payload.length; i++) {\n        usersNames.push({\n          name: actions.payload[i].firstName + \" \" + actions.payload[i].middleName,\n          profileId: actions.payload[i].userId\n        });\n      }\n\n      state.users = usersNames;\n    },\n    saveSelectedUsers: function saveSelectedUsers(state, actions) {\n      state.selectedUsers = [];\n\n      for (var i = 0; i < actions.payload.length; i++) {\n        state.selectedUsers.push({\n          \"user_id\": actions.payload[i]\n        });\n      }\n    }\n  }\n});\nvar _notificationStore$ac = notificationStore.actions,\n    increment = _notificationStore$ac.increment,\n    onOpen = _notificationStore$ac.onOpen,\n    onClose = _notificationStore$ac.onClose,\n    saveUsers = _notificationStore$ac.saveUsers,\n    onCloseUsers = _notificationStore$ac.onCloseUsers,\n    onOpenUsers = _notificationStore$ac.onOpenUsers,\n    saveSelectedUsers = _notificationStore$ac.saveSelectedUsers;\nexport { increment, onOpen, onClose, saveUsers, onCloseUsers, onOpenUsers, saveSelectedUsers };\nexport default notificationStore.reducer;","map":{"version":3,"names":["createSlice","notificationStore","name","initialState","value","modalFlag","modalFlagUsers","users","selectedUsers","reducers","increment","state","action","payload","onOpen","actions","onClose","onOpenUsers","onCloseUsers","saveUsers","usersNames","i","length","push","firstName","middleName","profileId","userId","saveSelectedUsers","reducer"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/apps/laser-avenue77/src/Notification/store-notification.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nexport const notificationStore=createSlice({\r\n    name:'notification',\r\n    initialState:{\r\n        value:66,\r\n        modalFlag:false,\r\n        modalFlagUsers:false,\r\n        users:[],\r\n        selectedUsers:[]\r\n    },\r\n    reducers:{\r\n    increment:(state,action)=>{\r\n    state.value = state.value + action.payload\r\n    },\r\n    onOpen:(state,actions)=>{\r\n       state.modalFlag= true\r\n    },\r\n    onClose:(state,actions)=>{\r\n        state.modalFlag= false\r\n     },\r\n     onOpenUsers:(state,actions)=>{\r\n        state.modalFlagUsers= true\r\n     },\r\n     onCloseUsers:(state,actions)=>{\r\n         state.modalFlagUsers= false\r\n      },\r\n    \r\n\r\n\r\n     saveUsers:(state,actions)=>{\r\n        let usersNames=[]\r\n        for (let i = 0; i < actions.payload.length; i++) {\r\n            usersNames.push({name:actions.payload[i].firstName +\" \"+ actions.payload[i].middleName,\r\n            profileId:actions.payload[i].userId\r\n        \r\n        })\r\n            \r\n        }\r\n        state.users=usersNames\r\n     },\r\n     saveSelectedUsers:(state,actions)=>{\r\n      state.selectedUsers= []\r\n        for (let i = 0; i < actions.payload.length; i++) {\r\n           \r\n         state.selectedUsers.push({\"user_id\":actions.payload[i]})\r\n        }\r\n     \r\n     },\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const {increment,onOpen,onClose,saveUsers,onCloseUsers,onOpenUsers,saveSelectedUsers} =notificationStore.actions\r\nexport default notificationStore.reducer "],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,OAAO,IAAMC,iBAAiB,GAACD,WAAW,CAAC;EACvCE,IAAI,EAAC,cADkC;EAEvCC,YAAY,EAAC;IACTC,KAAK,EAAC,EADG;IAETC,SAAS,EAAC,KAFD;IAGTC,cAAc,EAAC,KAHN;IAITC,KAAK,EAAC,EAJG;IAKTC,aAAa,EAAC;EALL,CAF0B;EASvCC,QAAQ,EAAC;IACTC,SAAS,EAAC,mBAACC,KAAD,EAAOC,MAAP,EAAgB;MAC1BD,KAAK,CAACP,KAAN,GAAcO,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAAnC;IACC,CAHQ;IAITC,MAAM,EAAC,gBAACH,KAAD,EAAOI,OAAP,EAAiB;MACrBJ,KAAK,CAACN,SAAN,GAAiB,IAAjB;IACF,CANQ;IAOTW,OAAO,EAAC,iBAACL,KAAD,EAAOI,OAAP,EAAiB;MACrBJ,KAAK,CAACN,SAAN,GAAiB,KAAjB;IACF,CATO;IAURY,WAAW,EAAC,qBAACN,KAAD,EAAOI,OAAP,EAAiB;MAC1BJ,KAAK,CAACL,cAAN,GAAsB,IAAtB;IACF,CAZO;IAaRY,YAAY,EAAC,sBAACP,KAAD,EAAOI,OAAP,EAAiB;MAC1BJ,KAAK,CAACL,cAAN,GAAsB,KAAtB;IACF,CAfM;IAmBRa,SAAS,EAAC,mBAACR,KAAD,EAAOI,OAAP,EAAiB;MACxB,IAAIK,UAAU,GAAC,EAAf;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACF,OAAR,CAAgBS,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;QAC7CD,UAAU,CAACG,IAAX,CAAgB;UAACrB,IAAI,EAACa,OAAO,CAACF,OAAR,CAAgBQ,CAAhB,EAAmBG,SAAnB,GAA8B,GAA9B,GAAmCT,OAAO,CAACF,OAAR,CAAgBQ,CAAhB,EAAmBI,UAA5D;UAChBC,SAAS,EAACX,OAAO,CAACF,OAAR,CAAgBQ,CAAhB,EAAmBM;QADb,CAAhB;MAKH;;MACDhB,KAAK,CAACJ,KAAN,GAAYa,UAAZ;IACF,CA7BO;IA8BRQ,iBAAiB,EAAC,2BAACjB,KAAD,EAAOI,OAAP,EAAiB;MAClCJ,KAAK,CAACH,aAAN,GAAqB,EAArB;;MACE,KAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACF,OAAR,CAAgBS,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;QAEhDV,KAAK,CAACH,aAAN,CAAoBe,IAApB,CAAyB;UAAC,WAAUR,OAAO,CAACF,OAAR,CAAgBQ,CAAhB;QAAX,CAAzB;MACA;IAEH;EArCO;AAT8B,CAAD,CAAnC;AAoDA,4BAAuFpB,iBAAiB,CAACc,OAAzG;AAAA,IAAOL,SAAP,yBAAOA,SAAP;AAAA,IAAiBI,MAAjB,yBAAiBA,MAAjB;AAAA,IAAwBE,OAAxB,yBAAwBA,OAAxB;AAAA,IAAgCG,SAAhC,yBAAgCA,SAAhC;AAAA,IAA0CD,YAA1C,yBAA0CA,YAA1C;AAAA,IAAuDD,WAAvD,yBAAuDA,WAAvD;AAAA,IAAmEW,iBAAnE,yBAAmEA,iBAAnE;;AACP,eAAe3B,iBAAiB,CAAC4B,OAAjC"},"metadata":{},"sourceType":"module"}