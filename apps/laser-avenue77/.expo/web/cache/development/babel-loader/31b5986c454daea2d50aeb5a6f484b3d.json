{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Fragment, useCallback, useEffect, useMemo, useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./styles\";\nimport RenderBars from \"./RenderBars\";\nimport RenderStackBars from \"./RenderStackBars\";\nimport Rule from \"../Components/lineSvg\";\nimport { bezierCommand, svgPath } from \"../utils\";\nimport Svg, { Circle, Path, Rect, Text as CanvasText } from 'react-native-svg';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var BarChart = function BarChart(props) {\n  var scrollRef = useRef();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      points = _useState2[0],\n      setPoints = _useState2[1];\n\n  var _useState3 = useState(-1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedIndex = _useState4[0],\n      setSelectedIndex = _useState4[1];\n\n  var showLine = props.showLine || false;\n  var initialSpacing = props.initialSpacing === 0 ? 0 : props.initialSpacing || 40;\n  var data = useMemo(function () {\n    if (!props.data) {\n      return [];\n    }\n\n    if (props.yAxisOffset) {\n      return props.data.map(function (item) {\n        item.value = item.value - props.yAxisOffset;\n        return item;\n      });\n    }\n\n    return props.data;\n  }, [props.yAxisOffset, props.data]);\n  var lineData = props.lineData || data;\n  var defaultLineConfig = {\n    initialSpacing: initialSpacing,\n    curved: false,\n    isAnimated: false,\n    thickness: 1,\n    color: 'black',\n    hideDataPoints: false,\n    dataPointsShape: 'circular',\n    dataPointsWidth: 2,\n    dataPointsHeight: 2,\n    dataPointsColor: 'black',\n    dataPointsRadius: 3,\n    textColor: 'gray',\n    textFontSize: 10,\n    textShiftX: 0,\n    textShiftY: 0,\n    shiftY: 0,\n    delay: 0,\n    startIndex: 0,\n    endIndex: lineData.length - 1\n  };\n  var lineConfig = props.lineConfig ? {\n    initialSpacing: props.lineConfig.initialSpacing === 0 ? 0 : props.lineConfig.initialSpacing || defaultLineConfig.initialSpacing,\n    curved: props.lineConfig.curved || defaultLineConfig.curved,\n    isAnimated: props.lineConfig.isAnimated || defaultLineConfig.isAnimated,\n    thickness: props.lineConfig.thickness || defaultLineConfig.thickness,\n    color: props.lineConfig.color || defaultLineConfig.color,\n    hideDataPoints: props.lineConfig.hideDataPoints || defaultLineConfig.hideDataPoints,\n    dataPointsShape: props.lineConfig.dataPointsShape || defaultLineConfig.dataPointsShape,\n    dataPointsHeight: props.lineConfig.dataPointsHeight || defaultLineConfig.dataPointsHeight,\n    dataPointsWidth: props.lineConfig.dataPointsWidth || defaultLineConfig.dataPointsWidth,\n    dataPointsColor: props.lineConfig.dataPointsColor || defaultLineConfig.dataPointsColor,\n    dataPointsRadius: props.lineConfig.dataPointsRadius || defaultLineConfig.dataPointsRadius,\n    textColor: props.lineConfig.textColor || defaultLineConfig.textColor,\n    textFontSize: props.lineConfig.textFontSize || defaultLineConfig.textFontSize,\n    textShiftX: props.lineConfig.textShiftX || defaultLineConfig.textShiftX,\n    textShiftY: props.lineConfig.textShiftY || defaultLineConfig.textShiftY,\n    shiftY: props.lineConfig.shiftY || defaultLineConfig.shiftY,\n    delay: props.lineConfig.delay || defaultLineConfig.delay,\n    startIndex: props.lineConfig.startIndex || defaultLineConfig.startIndex,\n    endIndex: props.lineConfig.endIndex === 0 ? 0 : props.lineConfig.endIndex || defaultLineConfig.endIndex\n  } : defaultLineConfig;\n  var containerHeight = props.height || 200;\n  var noOfSections = props.noOfSections || 10;\n  var horizSections = [{\n    value: '0'\n  }];\n  var horizSectionsBelow = [];\n  var stepHeight = props.stepHeight || containerHeight / noOfSections;\n  var spacing = props.spacing === 0 ? 0 : props.spacing || 20;\n  var labelWidth = props.labelWidth || 0;\n  var scrollToEnd = props.scrollToEnd || false;\n  var scrollAnimation = props.scrollAnimation === false ? false : true;\n  var labelsExtraHeight = props.labelsExtraHeight || 0;\n  var totalWidth = spacing;\n  var maxItem = 0,\n      minItem = 0;\n\n  if (props.stackData) {\n    props.stackData.forEach(function (stackItem) {\n      var stackSum = stackItem.stacks.reduce(function (acc, stack) {\n        return acc + stack.value;\n      }, 0);\n\n      if (stackSum > maxItem) {\n        maxItem = stackSum;\n      }\n\n      if (stackSum < minItem) {\n        minItem = stackSum;\n      }\n\n      totalWidth += (stackItem.stacks[0].barWidth || props.barWidth || 30) + spacing;\n    });\n  } else {\n    data.forEach(function (item) {\n      if (item.value > maxItem) {\n        maxItem = item.value;\n      }\n\n      if (item.value < minItem) {\n        minItem = item.value;\n      }\n\n      totalWidth += (item.barWidth || props.barWidth || 30) + (item.spacing === 0 ? 0 : item.spacing || spacing);\n    });\n  }\n\n  if (props.showFractionalValues || props.roundToDigits) {\n    maxItem *= 10 * (props.roundToDigits || 1);\n    maxItem = maxItem + (10 - maxItem % 10);\n    maxItem /= 10 * (props.roundToDigits || 1);\n    maxItem = parseFloat(maxItem.toFixed(props.roundToDigits || 1));\n\n    if (minItem !== 0) {\n      minItem *= 10 * (props.roundToDigits || 1);\n      minItem = minItem - (10 + minItem % 10);\n      minItem /= 10 * (props.roundToDigits || 1);\n      minItem = parseFloat(minItem.toFixed(props.roundToDigits || 1));\n    }\n  } else {\n    maxItem = maxItem + (10 - maxItem % 10);\n\n    if (minItem !== 0) {\n      minItem = minItem - (10 + minItem % 10);\n    }\n  }\n\n  var maxValue = props.maxValue || maxItem;\n  var minValue = props.minValue || minItem;\n  var stepValue = props.stepValue || maxValue / noOfSections;\n  var noOfSectionsBelowXAxis = props.noOfSectionsBelowXAxis || -minValue / stepValue;\n  var disableScroll = props.disableScroll || false;\n  var showScrollIndicator = props.showScrollIndicator || false;\n  var side = props.side || '';\n  var rotateLabel = props.rotateLabel || false;\n  var isAnimated = props.isAnimated || false;\n  var animationDuration = props.animationDuration || 800;\n  var opacity = props.opacity || 1;\n  var isThreeD = props.isThreeD || false;\n  var showVerticalLines = props.showVerticalLines || false;\n  var rulesThickness = props.rulesThickness === 0 ? 0 : props.rulesThickness || 1;\n  var rulesLength = props.rulesLength;\n  var rulesColor = props.rulesColor || 'lightgray';\n  var verticalLinesThickness = props.verticalLinesThickness === 0 ? 0 : props.verticalLinesThickness || 1;\n  var verticalLinesHeight = props.verticalLinesHeight;\n  var verticalLinesColor = props.verticalLinesColor || 'lightgray';\n  var verticalLinesZIndex = props.verticalLinesZIndex || -1;\n  var verticalLinesAr = [];\n  props.noOfVerticalLines ? verticalLinesAr = _toConsumableArray(Array(props.noOfVerticalLines).keys()) : verticalLinesAr = _toConsumableArray(Array(props.stackData ? props.stackData.length : data.length).keys());\n  var verticalLinesSpacing = props.verticalLinesSpacing || 0;\n  var showYAxisIndices = props.showYAxisIndices || false;\n  var showXAxisIndices = props.showXAxisIndices || false;\n  var yAxisIndicesHeight = props.yAxisIndicesHeight || 2;\n  var xAxisIndicesHeight = props.xAxisIndicesHeight || 2;\n  var yAxisIndicesWidth = props.yAxisIndicesWidth || 4;\n  var xAxisIndicesWidth = props.xAxisIndicesWidth || 4;\n  var xAxisIndicesColor = props.xAxisIndicesColor || 'black';\n  var yAxisIndicesColor = props.yAxisIndicesColor || 'black';\n  var yAxisLabelPrefix = props.yAxisLabelPrefix || '';\n  var yAxisLabelSuffix = props.yAxisLabelSuffix || '';\n  var yAxisSide = props.yAxisSide || 'left';\n  var xAxisThickness = props.xAxisThickness === 0 ? props.xAxisThickness : props.xAxisThickness || 1;\n  var xAxisLength = props.xAxisLength;\n  var xAxisColor = props.xAxisColor || 'black';\n  var hideRules = props.hideRules || false;\n  var yAxisThickness = props.yAxisThickness === 0 ? props.yAxisThickness : props.yAxisThickness || 1;\n  var yAxisColor = props.yAxisColor || 'black';\n  var yAxisTextStyle = props.yAxisTextStyle;\n  var yAxisTextNumberOfLines = props.yAxisTextNumberOfLines || 1;\n  var xAxisTextNumberOfLines = props.xAxisTextNumberOfLines || 1;\n  var yAxisLabelContainerStyle = props.yAxisLabelContainerStyle;\n  var horizontalRulesStyle = props.horizontalRulesStyle;\n  var showFractionalValues = props.showFractionalValues || false;\n  var yAxisLabelWidth = props.yAxisLabelWidth || 35;\n  var hideYAxisText = props.hideYAxisText || false;\n  var backgroundColor = props.backgroundColor || 'transparent';\n  var horizontal = props.horizontal || false;\n  var yAxisAtTop = props.yAxisAtTop || false;\n  var intactTopLabel = props.intactTopLabel || false;\n  var hideOrigin = props.hideOrigin || false;\n  var rulesType = props.rulesType || 'line';\n  var xAxisType = props.xAxisType || 'solid';\n  var dashWidth = props.dashWidth === 0 ? 0 : props.dashWidth || 4;\n  var dashGap = props.dashGap === 0 ? 0 : props.dashGap || 8;\n  var heightValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var opacValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var widthValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var autoShiftLabels = props.autoShiftLabels || false;\n  var labelsAppear = useCallback(function () {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false\n    }).start();\n  }, [opacValue]);\n  var decreaseWidth = useCallback(function () {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false\n    }).start();\n  }, [animationDuration, widthValue]);\n  useEffect(function () {\n    if (showLine) {\n      var pp = '';\n\n      if (!lineConfig.curved) {\n        for (var i = 0; i < lineData.length; i++) {\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          var currentBarWidth = data && data[i] && data[i].barWidth || props.barWidth || 30;\n          pp += 'L' + (yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth / 2 + (currentBarWidth + spacing) * i) + ' ' + (containerHeight - lineConfig.shiftY - lineData[i].value * containerHeight / maxValue) + ' ';\n        }\n\n        setPoints(pp.replace('L', 'M'));\n      } else {\n        var p1Array = [];\n\n        for (var _i = 0; _i < lineData.length; _i++) {\n          if (_i < lineConfig.startIndex || _i > lineConfig.endIndex) continue;\n\n          var _currentBarWidth = data && data[_i] && data[_i].barWidth || props.barWidth || 30;\n\n          p1Array.push([yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - _currentBarWidth / 2) - lineConfig.dataPointsWidth / 2 + (_currentBarWidth + spacing) * _i, containerHeight - lineConfig.shiftY - lineData[_i].value * containerHeight / maxValue]);\n          var xx = svgPath(p1Array, bezierCommand);\n          setPoints(xx);\n        }\n      }\n\n      if (lineConfig.isAnimated) {\n        setTimeout(function () {\n          return decreaseWidth();\n        }, lineConfig.delay || 0);\n      }\n    }\n\n    setTimeout(function () {\n      return labelsAppear();\n    }, animationDuration);\n  }, [animationDuration, containerHeight, data, lineData, decreaseWidth, initialSpacing, labelsAppear, lineConfig.initialSpacing, lineConfig.curved, lineConfig.dataPointsWidth, lineConfig.shiftY, lineConfig.isAnimated, lineConfig.delay, lineConfig.startIndex, lineConfig.endIndex, maxValue, props.barWidth, showLine, spacing, yAxisLabelWidth]);\n  var defaultReferenceConfig = {\n    thickness: rulesThickness,\n    width: horizontal ? props.width || totalWidth : (props.width || totalWidth) + 11,\n    color: 'black',\n    type: rulesType,\n    dashWidth: dashWidth,\n    dashGap: dashGap,\n    labelText: '',\n    labelTextStyle: null\n  };\n  var showReferenceLine1 = props.showReferenceLine1 || false;\n  var referenceLine1Position = props.referenceLine1Position === 0 ? 0 : props.referenceLine1Position || containerHeight / 2;\n  var referenceLine1Config = props.referenceLine1Config ? {\n    thickness: props.referenceLine1Config.thickness || rulesThickness,\n    width: horizontal ? props.referenceLine1Config.width || props.width || totalWidth : (props.referenceLine1Config.width || props.width || totalWidth) + 11,\n    color: props.referenceLine1Config.color || 'black',\n    type: props.referenceLine1Config.type || rulesType,\n    dashWidth: props.referenceLine1Config.dashWidth || dashWidth,\n    dashGap: props.referenceLine1Config.dashGap || dashGap,\n    labelText: props.referenceLine1Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: props.referenceLine1Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  var showReferenceLine2 = props.showReferenceLine2 || false;\n  var referenceLine2Position = props.referenceLine2Position === 0 ? 0 : props.referenceLine2Position || 3 * containerHeight / 2;\n  var referenceLine2Config = props.referenceLine2Config ? {\n    thickness: props.referenceLine2Config.thickness || rulesThickness,\n    width: horizontal ? props.referenceLine2Config.width || props.width || totalWidth : (props.referenceLine2Config.width || props.width || totalWidth) + 11,\n    color: props.referenceLine2Config.color || 'black',\n    type: props.referenceLine2Config.type || rulesType,\n    dashWidth: props.referenceLine2Config.dashWidth || dashWidth,\n    dashGap: props.referenceLine2Config.dashGap || dashGap,\n    labelText: props.referenceLine2Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: props.referenceLine2Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  var showReferenceLine3 = props.showReferenceLine3 || false;\n  var referenceLine3Position = props.referenceLine3Position === 0 ? 0 : props.referenceLine3Position || containerHeight / 3;\n  var referenceLine3Config = props.referenceLine3Config ? {\n    thickness: props.referenceLine3Config.thickness || rulesThickness,\n    width: horizontal ? props.referenceLine3Config.width || props.width || totalWidth : (props.referenceLine3Config.width || props.width || totalWidth) + 11,\n    color: props.referenceLine3Config.color || 'black',\n    type: props.referenceLine3Config.type || rulesType,\n    dashWidth: props.referenceLine3Config.dashWidth || dashWidth,\n    dashGap: props.referenceLine3Config.dashGap || dashGap,\n    labelText: props.referenceLine3Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: props.referenceLine3Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  horizSections.pop();\n\n  for (var i = 0; i <= noOfSections; i++) {\n    var _props$yAxisLabelText;\n\n    var value = maxValue - stepValue * i;\n\n    if (props.showFractionalValues || props.roundToDigits) {\n      value = parseFloat(value.toFixed(props.roundToDigits || 1));\n    }\n\n    horizSections.push({\n      value: props.yAxisLabelTexts ? (_props$yAxisLabelText = props.yAxisLabelTexts[noOfSections - i]) != null ? _props$yAxisLabelText : value.toString() : value.toString()\n    });\n  }\n\n  if (noOfSectionsBelowXAxis) {\n    for (var _i2 = 1; _i2 <= noOfSectionsBelowXAxis; _i2++) {\n      var _props$yAxisLabelText2;\n\n      var _value = stepValue * -_i2;\n\n      if (props.showFractionalValues || props.roundToDigits) {\n        _value = parseFloat(_value.toFixed(props.roundToDigits || 1));\n      }\n\n      horizSectionsBelow.push({\n        value: props.yAxisLabelTexts ? (_props$yAxisLabelText2 = props.yAxisLabelTexts[noOfSectionsBelowXAxis - _i2]) != null ? _props$yAxisLabelText2 : _value.toString() : _value.toString()\n      });\n    }\n  }\n\n  var animatedHeight = heightValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%']\n  });\n  var appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1]\n  });\n  var animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth]\n  });\n\n  var getLabel = function getLabel(val, index) {\n    var label = '';\n\n    if (showFractionalValues || props.yAxisLabelTexts && props.yAxisLabelTexts[index] !== undefined) {\n      if (val) {\n        label = props.yAxisOffset ? (Number(val) + props.yAxisOffset).toString() : val;\n      } else {\n        label = props.yAxisOffset ? props.yAxisOffset.toString() : '0';\n      }\n    } else {\n      if (val) {\n        label = val.toString().split('.')[0];\n\n        if (props.yAxisOffset) {\n          label = (Number(label) + props.yAxisOffset).toString();\n        }\n      } else {\n        label = props.yAxisOffset ? props.yAxisOffset.toString() : '0';\n      }\n    }\n\n    return yAxisLabelPrefix + label + yAxisLabelSuffix;\n  };\n\n  var renderHorizSections = function renderHorizSections() {\n    return _jsxs(_Fragment, {\n      children: [horizSections.map(function (sectionItems, index) {\n        return _jsxs(View, {\n          style: [styles.horizBar, {\n            width: horizontal ? props.width || Math.min(300, totalWidth) : props.width || totalWidth + 11\n          }, yAxisSide === 'right' && {\n            transform: [{\n              rotateY: '180deg'\n            }]\n          }, horizontalRulesStyle],\n          children: [_jsx(View, {\n            style: [styles.leftLabel, {\n              borderRightWidth: yAxisThickness,\n              borderColor: yAxisColor\n            }, horizontal && !yAxisAtTop && {\n              transform: [{\n                translateX: (props.width || Math.min(300, totalWidth)) + yAxisThickness\n              }]\n            }, {\n              height: index === noOfSections ? stepHeight / 2 : stepHeight,\n              width: yAxisLabelWidth\n            }, yAxisLabelContainerStyle]\n          }), _jsx(View, {\n            style: [index === noOfSections ? styles.lastLeftPart : styles.leftPart, {\n              backgroundColor: backgroundColor\n            }],\n            children: index === noOfSections ? _jsx(Rule, {\n              config: {\n                thickness: xAxisThickness,\n                color: xAxisColor,\n                width: xAxisLength || (horizontal ? props.width || Math.min(300, totalWidth) : (props.width || totalWidth) + 11),\n                dashWidth: dashWidth,\n                dashGap: dashGap,\n                type: xAxisType\n              }\n            }) : hideRules ? null : _jsx(Rule, {\n              config: {\n                thickness: rulesThickness,\n                color: rulesColor,\n                width: rulesLength || (horizontal ? props.width || Math.min(300, totalWidth) : (props.width || totalWidth) + 11),\n                dashWidth: dashWidth,\n                dashGap: dashGap,\n                type: rulesType\n              }\n            })\n          })]\n        }, index);\n      }), props.hideAxesAndRules !== true && !hideYAxisText && horizSections.map(function (sectionItems, index) {\n        var label = getLabel(sectionItems.value, index);\n\n        if (hideOrigin && index === horizSections.length - 1) {\n          label = '';\n        }\n\n        return _jsx(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            top: stepHeight * index,\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }, yAxisSide === 'right' && {\n            transform: [{\n              translateX: (props.width ? props.width : totalWidth) - 30\n            }, {\n              rotateY: '180deg'\n            }]\n          }, horizontal && !yAxisAtTop && {\n            transform: [{\n              translateX: (props.width || Math.min(300, totalWidth)) + yAxisThickness + yAxisLabelWidth\n            }]\n          }, yAxisLabelContainerStyle],\n          children: _jsx(Text, {\n            numberOfLines: yAxisTextNumberOfLines,\n            ellipsizeMode: 'clip',\n            style: [yAxisTextStyle, yAxisSide === 'right' && {\n              transform: [{\n                rotateY: '180deg'\n              }]\n            }, index === noOfSections && {\n              marginBottom: stepHeight / -2\n            }],\n            children: label\n          })\n        }, index);\n      }), horizSectionsBelow.map(function (sectionItems, index) {\n        return _jsxs(View, {\n          style: [styles.horizBar, {\n            width: horizontal ? props.width || totalWidth : props.width || totalWidth + 11\n          }, yAxisSide === 'right' && {\n            transform: [{\n              rotateY: '180deg'\n            }]\n          }, index === 0 && {\n            marginTop: stepHeight / 2\n          }],\n          children: [_jsx(View, {\n            style: [styles.leftLabel, {\n              borderRightWidth: yAxisThickness,\n              borderColor: yAxisColor\n            }, horizontal && !yAxisAtTop && {\n              transform: [{\n                translateX: totalWidth + yAxisThickness\n              }]\n            }, {\n              height: index === 0 ? stepHeight * 1.5 : stepHeight,\n              width: yAxisLabelWidth\n            }, index === 0 && {\n              marginTop: -stepHeight / 2\n            }]\n          }), _jsx(View, {\n            style: [styles.leftPart, {\n              backgroundColor: backgroundColor\n            }],\n            children: hideRules ? null : _jsx(Rule, {\n              config: {\n                thickness: rulesThickness,\n                color: rulesColor,\n                width: rulesLength || (horizontal ? props.width || totalWidth : (props.width || totalWidth) + 11),\n                dashWidth: dashWidth,\n                dashGap: dashGap,\n                type: rulesType\n              }\n            })\n          })]\n        }, index);\n      }), props.hideAxesAndRules !== true && !hideYAxisText && horizSectionsBelow.map(function (sectionItems, index) {\n        var label = getLabel(horizSectionsBelow[horizSectionsBelow.length - 1 - index].value, index);\n        return _jsx(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            bottom: stepHeight * (index - 1),\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }, yAxisSide === 'right' && {\n            transform: [{\n              translateX: (props.width ? props.width : totalWidth) - 30\n            }, {\n              rotateY: '180deg'\n            }]\n          }, yAxisLabelContainerStyle],\n          children: _jsx(Text, {\n            numberOfLines: yAxisTextNumberOfLines,\n            ellipsizeMode: 'clip',\n            style: [yAxisTextStyle, yAxisSide === 'right' && {\n              transform: [{\n                rotateY: '180deg'\n              }]\n            }, index === noOfSections && {\n              marginBottom: stepHeight / -2\n            }],\n            children: label\n          })\n        }, index);\n      }), props.hideAxesAndRules !== true && !hideYAxisText && horizSections.map(function (sectionItems, index) {\n        var label = getLabel(sectionItems.value, index);\n\n        if (hideOrigin && index === horizSections.length - 1) {\n          label = '';\n        }\n\n        return _jsxs(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            top: stepHeight * index,\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }, yAxisSide === 'right' && {\n            transform: [{\n              translateX: (props.width ? props.width : totalWidth) - 30\n            }, {\n              rotateY: '180deg'\n            }]\n          }],\n          children: [index === noOfSections && showReferenceLine1 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: referenceLine1Position * containerHeight / maxValue,\n              left: yAxisSide === 'right' ? yAxisLabelWidth + yAxisThickness : yAxisLabelWidth + yAxisThickness - 5\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine1Config\n            }), referenceLine1Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, yAxisSide === 'right' && {\n                transform: [{\n                  rotateY: '180deg'\n                }]\n              }, referenceLine1Config.labelTextStyle],\n              children: referenceLine1Config.labelText\n            }) : null]\n          }) : null, index === noOfSections && showReferenceLine2 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: referenceLine2Position * containerHeight / maxValue,\n              left: yAxisSide === 'right' ? yAxisLabelWidth + yAxisThickness : yAxisLabelWidth + yAxisThickness - 5\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine2Config\n            }), referenceLine2Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, yAxisSide === 'right' && {\n                transform: [{\n                  rotateY: '180deg'\n                }]\n              }, referenceLine2Config.labelTextStyle],\n              children: referenceLine2Config.labelText\n            }) : null]\n          }) : null, index === noOfSections && showReferenceLine3 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: referenceLine3Position * containerHeight / maxValue,\n              left: yAxisSide === 'right' ? yAxisLabelWidth + yAxisThickness : yAxisLabelWidth + yAxisThickness - 5\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine3Config\n            }), referenceLine3Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, yAxisSide === 'right' && {\n                transform: [{\n                  rotateY: '180deg'\n                }]\n              }, referenceLine3Config.labelTextStyle],\n              children: referenceLine3Config.labelText\n            }) : null]\n          }) : null]\n        }, index);\n      })]\n    });\n  };\n\n  var renderSpecificVerticalLines = function renderSpecificVerticalLines(dataForRender) {\n    return dataForRender.map(function (item, index) {\n      if (item.showVerticalLine) {\n        var currentBarWidth = item.barWidth || props.barWidth || 30;\n        return _jsx(Rect, {\n          x: yAxisLabelWidth + 6 - (item.verticalLineThickness || 1) / 2 - 1 - (initialSpacing - currentBarWidth / 2) + (currentBarWidth + spacing) * index,\n          y: containerHeight - lineConfig.shiftY - item.value * containerHeight / maxValue + 9,\n          width: item.verticalLineThickness || 1,\n          height: item.value * containerHeight / maxValue + lineConfig.shiftY,\n          fill: item.verticalLineColor || 'lightgray'\n        });\n      }\n\n      return null;\n    });\n  };\n\n  var renderDataPoints = function renderDataPoints() {\n    return lineData.map(function (item, index) {\n      if (index < lineConfig.startIndex || index > lineConfig.endIndex) {\n        return null;\n      }\n\n      var currentBarWidth = item.barWidth || props.barWidth || 30;\n\n      if (lineConfig.dataPointsShape === 'rectangular') {\n        return _jsxs(Fragment, {\n          children: [_jsx(Rect, {\n            x: yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth + (currentBarWidth + spacing) * index,\n            y: containerHeight - lineConfig.shiftY - lineConfig.dataPointsHeight / 2 - item.value * containerHeight / maxValue,\n            width: lineConfig.dataPointsWidth,\n            height: lineConfig.dataPointsHeight,\n            fill: lineConfig.dataPointsColor\n          }), item.dataPointText && _jsx(CanvasText, {\n            fill: item.textColor || lineConfig.textColor,\n            fontSize: item.textFontSize || lineConfig.textFontSize,\n            x: yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth + (currentBarWidth + spacing) * index + (item.textShiftX || lineConfig.textShiftX || 0),\n            y: containerHeight - lineConfig.shiftY - lineConfig.dataPointsHeight / 2 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n            children: item.dataPointText\n          })]\n        }, index);\n      }\n\n      return _jsxs(Fragment, {\n        children: [_jsx(Circle, {\n          cx: yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth / 2 + (currentBarWidth + spacing) * index,\n          cy: containerHeight - lineConfig.shiftY - item.value * containerHeight / maxValue,\n          r: lineConfig.dataPointsRadius,\n          fill: lineConfig.dataPointsColor\n        }), item.dataPointText && _jsx(CanvasText, {\n          fill: item.textColor || lineConfig.textColor,\n          fontSize: item.textFontSize || lineConfig.textFontSize,\n          x: yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth + (currentBarWidth + spacing) * index + (item.textShiftX || lineConfig.textShiftX || 0),\n          y: containerHeight - lineConfig.shiftY - lineConfig.dataPointsHeight / 2 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n          children: item.dataPointText\n        })]\n      }, index);\n    });\n  };\n\n  var renderSpecificDataPoints = function renderSpecificDataPoints(dataForRender) {\n    return dataForRender.map(function (item, index) {\n      var currentBarWidth = item.barWidth || props.barWidth || 30;\n\n      if (item.showDataPoint) {\n        if (item.dataPointShape === 'rectangular') {\n          return _jsxs(Fragment, {\n            children: [_jsx(Rect, {\n              x: initialSpacing - (item.dataPointWidth || 2) / 2 - 1 + (currentBarWidth + spacing) * index,\n              y: containerHeight - lineConfig.shiftY - (item.dataPointHeight || 2) / 2 + 10 - item.value * containerHeight / maxValue,\n              width: item.dataPointWidth || 2,\n              height: item.dataPointHeight || 2,\n              fill: item.dataPointColor || 'black'\n            }), item.dataPointText && _jsx(CanvasText, {\n              fill: item.textColor || 'black',\n              fontSize: item.textFontSize || 10,\n              x: initialSpacing - (item.dataPointWidth || 2) + spacing * index + (item.textShiftX || lineConfig.textShiftX || 0),\n              y: containerHeight - lineConfig.shiftY - (item.dataPointHeight || 2) / 2 + 10 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n              children: item.dataPointText\n            })]\n          }, index);\n        } else {\n          return _jsxs(Fragment, {\n            children: [_jsx(Circle, {\n              cx: initialSpacing - (item.dataPointWidth || 2) / 2 + spacing * index,\n              cy: containerHeight - lineConfig.shiftY + 10 - item.value * containerHeight / maxValue,\n              r: item.dataPointRadius || 3,\n              fill: item.dataPointColor || 'black'\n            }), item.dataPointText && _jsx(CanvasText, {\n              fill: item.textColor || 'black',\n              fontSize: item.textFontSize || 10,\n              x: initialSpacing - (item.dataPointWidth || 2) + spacing * index + (item.textShiftX || lineConfig.textShiftX || 0),\n              y: containerHeight - lineConfig.shiftY - (item.dataPointHeight || 2) / 2 + 10 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n              children: item.dataPointText\n            })]\n          }, index);\n        }\n      }\n\n      return null;\n    });\n  };\n\n  var renderAnimatedLine = function renderAnimatedLine() {\n    return _jsx(Animated.View, {\n      style: {\n        position: 'absolute',\n        height: containerHeight + 10,\n        bottom: 60,\n        width: animatedWidth,\n        zIndex: -1\n      },\n      children: _jsxs(Svg, {\n        children: [_jsx(Path, {\n          d: points,\n          fill: \"none\",\n          stroke: lineConfig.color,\n          strokeWidth: lineConfig.thickness\n        }), renderSpecificVerticalLines(data), !lineConfig.hideDataPoints ? renderDataPoints() : renderSpecificDataPoints(data)]\n      })\n    });\n  };\n\n  var renderLine = function renderLine() {\n    return _jsx(View, {\n      style: {\n        position: 'absolute',\n        height: containerHeight + 10,\n        bottom: 60,\n        width: totalWidth,\n        zIndex: -1\n      },\n      children: _jsxs(Svg, {\n        children: [_jsx(Path, {\n          d: points,\n          fill: \"none\",\n          stroke: lineConfig.color,\n          strokeWidth: lineConfig.thickness\n        }), renderSpecificVerticalLines(data), !lineConfig.hideDataPoints ? renderDataPoints() : renderSpecificDataPoints(data)]\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: [styles.container, {\n      height: containerHeight + horizSectionsBelow.length * stepHeight + labelsExtraHeight\n    }, yAxisSide === 'right' && {\n      marginLeft: yAxisLabelWidth + yAxisThickness\n    }, props.width && !horizontal && {\n      width: props.width\n    }, horizontal && {\n      transform: [{\n        rotate: '90deg'\n      }, {\n        translateY: 15\n      }]\n    }],\n    children: [props.hideAxesAndRules !== true && renderHorizSections(), _jsx(ScrollView, {\n      ref: scrollRef,\n      onTouchStart: function onTouchStart(evt) {\n        if (props.renderTooltip) {\n          setSelectedIndex(-1);\n        }\n      },\n      onContentSizeChange: function onContentSizeChange() {\n        if (scrollRef.current && scrollToEnd) {\n          scrollRef.current.scrollToEnd({\n            animated: scrollAnimation\n          });\n        }\n      },\n      style: [{\n        marginLeft: yAxisSide === 'right' ? -yAxisLabelWidth + 10 : yAxisLabelWidth,\n        position: 'absolute',\n        bottom: stepHeight * -0.5 - 60 + xAxisThickness\n      }, props.width && {\n        width: props.width - 11\n      }, horizontal && {\n        width: props.width || Math.min(300, totalWidth)\n      }],\n      scrollEnabled: !disableScroll,\n      contentContainerStyle: [{\n        height: containerHeight + 130 + horizSectionsBelow.length * stepHeight + labelsExtraHeight,\n        paddingLeft: initialSpacing,\n        paddingBottom: horizSectionsBelow.length * stepHeight + labelsExtraHeight,\n        alignItems: 'flex-end'\n      }, !props.width && {\n        width: totalWidth\n      }],\n      showsHorizontalScrollIndicator: showScrollIndicator,\n      indicatorStyle: props.indicatorColor,\n      horizontal: true,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      children: _jsxs(Fragment, {\n        children: [showVerticalLines && verticalLinesAr.map(function (item, index) {\n          var totalSpacing = initialSpacing;\n\n          if (verticalLinesSpacing) {\n            totalSpacing = verticalLinesSpacing * (index + 1);\n          } else {\n            if (props.stackData) {\n              totalSpacing += (props.stackData[0].barWidth || props.barWidth || 30) / 2;\n            } else {\n              totalSpacing += (props.data[0].barWidth || props.barWidth || 30) / 2;\n            }\n\n            for (var _i3 = 0; _i3 < index; _i3++) {\n              var actualSpacing = spacing;\n\n              if (props.stackData) {\n                if (_i3 >= props.stackData.length - 1) {\n                  actualSpacing += (props.barWidth || 30) / 2;\n                } else {\n                  if (props.stackData[_i3].spacing || props.stackData[_i3].spacing === 0) {\n                    actualSpacing = props.stackData[_i3].spacing;\n                  }\n\n                  if (props.stackData[_i3 + 1].barWidth) {\n                    actualSpacing += props.stackData[_i3 + 1].barWidth;\n                  } else {\n                    actualSpacing += props.barWidth || 30;\n                  }\n                }\n              } else {\n                if (_i3 >= props.data.length - 1) {\n                  actualSpacing += (props.barWidth || 30) / 2;\n                } else {\n                  if (props.data[_i3].spacing || props.data[_i3].spacing === 0) {\n                    console.log('here for index ' + index + ' and i ' + _i3);\n                    actualSpacing = props.data[_i3].spacing;\n                  }\n\n                  if (props.data[_i3 + 1].barWidth) {\n                    actualSpacing += props.data[_i3 + 1].barWidth;\n                  } else {\n                    actualSpacing += props.barWidth || 30;\n                  }\n                }\n              }\n\n              console.log('i = ' + _i3 + ' actualSpacing ' + actualSpacing);\n              totalSpacing += actualSpacing;\n            }\n          }\n\n          return _jsx(View, {\n            style: {\n              position: 'absolute',\n              zIndex: verticalLinesZIndex || -1,\n              marginBottom: xAxisThickness,\n              height: verticalLinesHeight || containerHeight + 15 - xAxisThickness,\n              width: verticalLinesThickness,\n              backgroundColor: verticalLinesColor,\n              bottom: 60 + labelsExtraHeight,\n              left: totalSpacing\n            }\n          }, index);\n        }), showLine ? lineConfig.isAnimated ? renderAnimatedLine() : renderLine() : null, props.stackData ? props.stackData.map(function (item, index) {\n          return _jsx(RenderStackBars, {\n            stackData: props.stackData,\n            item: item,\n            index: index,\n            containerHeight: containerHeight,\n            maxValue: maxValue,\n            spacing: item.spacing === 0 ? 0 : item.spacing || spacing,\n            propSpacing: spacing,\n            xAxisThickness: xAxisThickness,\n            barWidth: props.barWidth,\n            opacity: opacity,\n            disablePress: item.disablePress || props.disablePress,\n            rotateLabel: rotateLabel,\n            showXAxisIndices: showXAxisIndices,\n            xAxisIndicesHeight: xAxisIndicesHeight,\n            xAxisIndicesWidth: xAxisIndicesWidth,\n            xAxisIndicesColor: xAxisIndicesColor,\n            horizontal: horizontal,\n            intactTopLabel: intactTopLabel,\n            barBorderRadius: props.barBorderRadius,\n            color: props.color,\n            showGradient: props.showGradient,\n            gradientColor: props.gradientColor,\n            barBackgroundPattern: props.barBackgroundPattern,\n            patternId: props.patternId,\n            label: item.label || (props.xAxisLabelTexts && props.xAxisLabelTexts[index] ? props.xAxisLabelTexts[index] : ''),\n            labelTextStyle: item.labelTextStyle || props.xAxisLabelTextStyle,\n            xAxisTextNumberOfLines: xAxisTextNumberOfLines,\n            renderTooltip: props.renderTooltip,\n            initialSpacing: initialSpacing,\n            selectedIndex: selectedIndex,\n            setSelectedIndex: setSelectedIndex,\n            activeOpacity: props.activeOpacity || 0.2\n          }, index);\n        }) : data.map(function (item, index) {\n          return _jsx(RenderBars, {\n            item: item,\n            index: index,\n            containerHeight: containerHeight,\n            maxValue: maxValue,\n            spacing: item.spacing === 0 ? 0 : item.spacing || spacing,\n            propSpacing: spacing,\n            side: side,\n            data: data,\n            barWidth: props.barWidth,\n            sideWidth: props.sideWidth,\n            labelWidth: labelWidth,\n            opacity: opacity,\n            isThreeD: isThreeD,\n            isAnimated: isAnimated,\n            animationDuration: animationDuration,\n            rotateLabel: rotateLabel,\n            animatedHeight: animatedHeight,\n            appearingOpacity: appearingOpacity,\n            roundedTop: props.roundedTop,\n            roundedBottom: props.roundedBottom,\n            disablePress: props.disablePress,\n            frontColor: props.frontColor,\n            sideColor: props.sideColor,\n            topColor: props.topColor,\n            showGradient: props.showGradient,\n            gradientColor: props.gradientColor,\n            activeOpacity: props.activeOpacity,\n            cappedBars: props.cappedBars,\n            capThickness: props.capThickness,\n            capColor: props.capColor,\n            capRadius: props.capRadius,\n            showXAxisIndices: showXAxisIndices,\n            xAxisIndicesHeight: xAxisIndicesHeight,\n            xAxisIndicesWidth: xAxisIndicesWidth,\n            xAxisIndicesColor: xAxisIndicesColor,\n            horizontal: horizontal,\n            intactTopLabel: intactTopLabel,\n            barBorderRadius: props.barBorderRadius,\n            autoShiftLabels: autoShiftLabels,\n            barBackgroundPattern: props.barBackgroundPattern,\n            patternId: props.patternId,\n            barMarginBottom: props.barMarginBottom,\n            label: item.label || (props.xAxisLabelTexts && props.xAxisLabelTexts[index] ? props.xAxisLabelTexts[index] : ''),\n            labelTextStyle: item.labelTextStyle || props.xAxisLabelTextStyle,\n            onPress: props.onPress,\n            xAxisTextNumberOfLines: xAxisTextNumberOfLines,\n            renderTooltip: props.renderTooltip,\n            initialSpacing: initialSpacing,\n            selectedIndex: selectedIndex,\n            setSelectedIndex: setSelectedIndex\n          }, index);\n        })]\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","Fragment","useCallback","useEffect","useMemo","useState","useRef","styles","RenderBars","RenderStackBars","Rule","bezierCommand","svgPath","Svg","Circle","Path","Rect","Text","CanvasText","BarChart","props","scrollRef","points","setPoints","selectedIndex","setSelectedIndex","showLine","initialSpacing","data","yAxisOffset","map","item","value","lineData","defaultLineConfig","curved","isAnimated","thickness","color","hideDataPoints","dataPointsShape","dataPointsWidth","dataPointsHeight","dataPointsColor","dataPointsRadius","textColor","textFontSize","textShiftX","textShiftY","shiftY","delay","startIndex","endIndex","length","lineConfig","containerHeight","height","noOfSections","horizSections","horizSectionsBelow","stepHeight","spacing","labelWidth","scrollToEnd","scrollAnimation","labelsExtraHeight","totalWidth","maxItem","minItem","stackData","forEach","stackItem","stackSum","stacks","reduce","acc","stack","barWidth","showFractionalValues","roundToDigits","parseFloat","toFixed","maxValue","minValue","stepValue","noOfSectionsBelowXAxis","disableScroll","showScrollIndicator","side","rotateLabel","animationDuration","opacity","isThreeD","showVerticalLines","rulesThickness","rulesLength","rulesColor","verticalLinesThickness","verticalLinesHeight","verticalLinesColor","verticalLinesZIndex","verticalLinesAr","noOfVerticalLines","Array","keys","verticalLinesSpacing","showYAxisIndices","showXAxisIndices","yAxisIndicesHeight","xAxisIndicesHeight","yAxisIndicesWidth","xAxisIndicesWidth","xAxisIndicesColor","yAxisIndicesColor","yAxisLabelPrefix","yAxisLabelSuffix","yAxisSide","xAxisThickness","xAxisLength","xAxisColor","hideRules","yAxisThickness","yAxisColor","yAxisTextStyle","yAxisTextNumberOfLines","xAxisTextNumberOfLines","yAxisLabelContainerStyle","horizontalRulesStyle","yAxisLabelWidth","hideYAxisText","backgroundColor","horizontal","yAxisAtTop","intactTopLabel","hideOrigin","rulesType","xAxisType","dashWidth","dashGap","heightValue","Animated","Value","opacValue","widthValue","autoShiftLabels","labelsAppear","setValue","timing","toValue","duration","easing","Easing","ease","useNativeDriver","start","decreaseWidth","linear","pp","i","currentBarWidth","replace","p1Array","push","xx","setTimeout","defaultReferenceConfig","width","type","labelText","labelTextStyle","showReferenceLine1","referenceLine1Position","referenceLine1Config","showReferenceLine2","referenceLine2Position","referenceLine2Config","showReferenceLine3","referenceLine3Position","referenceLine3Config","pop","yAxisLabelTexts","toString","animatedHeight","interpolate","inputRange","outputRange","appearingOpacity","animatedWidth","getLabel","val","index","label","undefined","Number","split","renderHorizSections","sectionItems","horizBar","Math","min","transform","rotateY","leftLabel","borderRightWidth","borderColor","translateX","lastLeftPart","leftPart","hideAxesAndRules","position","zIndex","top","marginBottom","marginTop","bottom","left","renderSpecificVerticalLines","dataForRender","showVerticalLine","verticalLineThickness","verticalLineColor","renderDataPoints","dataPointText","renderSpecificDataPoints","showDataPoint","dataPointShape","dataPointWidth","dataPointHeight","dataPointColor","dataPointRadius","renderAnimatedLine","renderLine","container","marginLeft","rotate","translateY","evt","renderTooltip","current","animated","paddingLeft","paddingBottom","alignItems","indicatorColor","totalSpacing","actualSpacing","console","log","disablePress","barBorderRadius","showGradient","gradientColor","barBackgroundPattern","patternId","xAxisLabelTexts","xAxisLabelTextStyle","activeOpacity","sideWidth","roundedTop","roundedBottom","frontColor","sideColor","topColor","cappedBars","capThickness","capColor","capRadius","barMarginBottom","onPress"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/node_modules/react-native-gifted-charts/src/BarChart/index.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  useRef,\n} from 'react';\nimport {\n  View,\n  Animated,\n  Easing,\n  Text,\n  ColorValue,\n  ScrollView,\n} from 'react-native';\nimport {styles} from './styles';\nimport RenderBars from './RenderBars';\nimport RenderStackBars from './RenderStackBars';\nimport Rule from '../Components/lineSvg';\nimport {bezierCommand, svgPath} from '../utils';\nimport Svg, {Circle, Path, Rect, Text as CanvasText} from 'react-native-svg';\n\ntype PropTypes = {\n  width?: number;\n  height?: number;\n  noOfSections?: number;\n  noOfSectionsBelowXAxis?: number;\n  maxValue?: number;\n  minValue?: number;\n  stepHeight?: number;\n  stepValue?: number;\n  spacing?: number;\n  data?: any;\n  stackData?: any;\n  side?: String;\n  rotateLabel?: Boolean;\n  isAnimated?: Boolean;\n  animationDuration?: number;\n  // animationEasing?: any;\n  opacity?: number;\n  isThreeD?: Boolean;\n  xAxisLength?: number;\n  xAxisThickness?: number;\n  xAxisColor?: ColorValue;\n  yAxisThickness?: number;\n  yAxisColor?: ColorValue;\n  xAxisType?: String;\n  yAxisLabelContainerStyle?: any;\n  horizontalRulesStyle?: any;\n  yAxisTextStyle?: any;\n  yAxisTextNumberOfLines?: number;\n  xAxisTextNumberOfLines?: number;\n  yAxisLabelWidth?: number;\n  hideYAxisText?: Boolean;\n  yAxisSide?: string;\n  yAxisOffset?: number;\n  initialSpacing?: number;\n  barWidth?: number;\n  sideWidth?: number;\n  showLine?: Boolean;\n  lineData?: any;\n  lineConfig?: lineConfigType;\n\n  cappedBars?: Boolean;\n  capThickness?: number;\n  capColor?: ColorValue;\n  capRadius?: number;\n\n  hideAxesAndRules?: Boolean;\n  hideRules?: Boolean;\n  rulesLength?: number;\n  rulesColor?: ColorValue;\n  rulesThickness?: number;\n  rulesType?: String;\n  dashWidth?: number;\n  dashGap?: number;\n  showReferenceLine1?: Boolean;\n  referenceLine1Config?: referenceConfigType;\n  referenceLine1Position?: number;\n  showReferenceLine2?: Boolean;\n  referenceLine2Config?: referenceConfigType;\n  referenceLine2Position?: number;\n  showReferenceLine3?: Boolean;\n  referenceLine3Config?: referenceConfigType;\n  referenceLine3Position?: number;\n  showVerticalLines?: Boolean;\n  verticalLinesThickness?: number;\n  verticalLinesHeight?: number;\n  verticalLinesColor?: ColorValue;\n  verticalLinesZIndex?: number;\n  noOfVerticalLines?: number;\n  verticalLinesSpacing?: number;\n\n  showYAxisIndices?: Boolean;\n  showXAxisIndices?: Boolean;\n  yAxisIndicesHeight?: number;\n  xAxisIndicesHeight?: number;\n  yAxisIndicesWidth?: number;\n  xAxisIndicesWidth?: number;\n  xAxisIndicesColor?: ColorValue;\n  yAxisIndicesColor?: ColorValue;\n\n  showFractionalValues?: Boolean;\n  roundToDigits?: number;\n  backgroundColor?: ColorValue;\n\n  disableScroll?: Boolean;\n  showScrollIndicator?: Boolean;\n  indicatorColor?: 'black' | 'default' | 'white';\n  roundedTop?: Boolean;\n  roundedBottom?: Boolean;\n  disablePress?: boolean;\n\n  frontColor?: ColorValue;\n  color?: ColorValue;\n  sideColor?: ColorValue;\n  topColor?: ColorValue;\n  gradientColor?: ColorValue;\n  showGradient?: Boolean;\n  activeOpacity?: number;\n\n  horizontal?: Boolean;\n  yAxisAtTop?: Boolean;\n\n  intactTopLabel?: Boolean;\n\n  horizSections?: Array<sectionType>;\n  barBorderRadius?: number;\n  hideOrigin?: Boolean;\n  labelWidth?: number;\n  yAxisLabelTexts?: Array<string>;\n  xAxisLabelTexts?: Array<string>;\n  xAxisLabelTextStyle?: any;\n  yAxisLabelPrefix?: String;\n  yAxisLabelSuffix?: String;\n  autoShiftLabels?: Boolean;\n  scrollToEnd?: Boolean;\n  scrollAnimation?: Boolean;\n  labelsExtraHeight?: number;\n  barBackgroundPattern?: Function;\n  patternId?: String;\n  barMarginBottom?: number;\n  onPress?: Function;\n  renderTooltip?: Function;\n};\ntype lineConfigType = {\n  initialSpacing?: number;\n  curved?: Boolean;\n  isAnimated?: Boolean;\n  delay?: number;\n  thickness?: number;\n  color?: ColorValue | String | any;\n  hideDataPoints?: Boolean;\n  dataPointsShape?: String;\n  dataPointsWidth?: number;\n  dataPointsHeight?: number;\n  dataPointsColor?: ColorValue | String | any;\n  dataPointsRadius?: number;\n  textColor?: ColorValue | String | any;\n  textFontSize?: number;\n  textShiftX?: number;\n  textShiftY?: number;\n  shiftY?: number;\n  startIndex?: number;\n  endIndex?: number;\n};\ntype referenceConfigType = {\n  thickness: number;\n  width: number;\n  color: ColorValue | String | any;\n  type: String;\n  dashWidth: number;\n  dashGap: number;\n  labelText: String;\n  labelTextStyle: any;\n};\ntype sectionType = {\n  value: string;\n};\ntype itemType = {\n  value?: number;\n  onPress?: any;\n  frontColor?: ColorValue;\n  sideColor?: ColorValue;\n  topColor?: ColorValue;\n  showGradient?: Boolean;\n  gradientColor?: any;\n  label?: String;\n  barWidth?: number;\n  sideWidth?: number;\n  labelTextStyle?: any;\n  topLabelComponent?: Function;\n  topLabelContainerStyle?: any;\n  disablePress?: any;\n  labelComponent?: View;\n  spacing?: number;\n  barBackgroundPattern?: Function;\n  patternId?: String;\n};\n\nexport const BarChart = (props: PropTypes) => {\n  const scrollRef = useRef();\n  const [points, setPoints] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const showLine = props.showLine || false;\n  const initialSpacing =\n    props.initialSpacing === 0 ? 0 : props.initialSpacing || 40;\n  const data = useMemo(() => {\n    if (!props.data) {\n      return [];\n    }\n    if (props.yAxisOffset) {\n      return props.data.map(item => {\n        item.value = item.value - props.yAxisOffset;\n        return item;\n      });\n    }\n    return props.data;\n  }, [props.yAxisOffset, props.data]);\n  const lineData = props.lineData || data;\n  const defaultLineConfig = {\n    initialSpacing: initialSpacing,\n    curved: false,\n    isAnimated: false,\n    thickness: 1,\n    color: 'black',\n    hideDataPoints: false,\n    dataPointsShape: 'circular',\n    dataPointsWidth: 2,\n    dataPointsHeight: 2,\n    dataPointsColor: 'black',\n    dataPointsRadius: 3,\n    textColor: 'gray',\n    textFontSize: 10,\n    textShiftX: 0,\n    textShiftY: 0,\n    shiftY: 0,\n    delay: 0,\n    startIndex: 0,\n    endIndex: lineData.length - 1,\n  };\n  const lineConfig = props.lineConfig\n    ? {\n        initialSpacing:\n          props.lineConfig.initialSpacing === 0\n            ? 0\n            : props.lineConfig.initialSpacing ||\n              defaultLineConfig.initialSpacing,\n        curved: props.lineConfig.curved || defaultLineConfig.curved,\n        isAnimated: props.lineConfig.isAnimated || defaultLineConfig.isAnimated,\n        thickness: props.lineConfig.thickness || defaultLineConfig.thickness,\n        color: props.lineConfig.color || defaultLineConfig.color,\n        hideDataPoints:\n          props.lineConfig.hideDataPoints || defaultLineConfig.hideDataPoints,\n        dataPointsShape:\n          props.lineConfig.dataPointsShape || defaultLineConfig.dataPointsShape,\n        dataPointsHeight:\n          props.lineConfig.dataPointsHeight ||\n          defaultLineConfig.dataPointsHeight,\n        dataPointsWidth:\n          props.lineConfig.dataPointsWidth || defaultLineConfig.dataPointsWidth,\n        dataPointsColor:\n          props.lineConfig.dataPointsColor || defaultLineConfig.dataPointsColor,\n        dataPointsRadius:\n          props.lineConfig.dataPointsRadius ||\n          defaultLineConfig.dataPointsRadius,\n        textColor: props.lineConfig.textColor || defaultLineConfig.textColor,\n        textFontSize:\n          props.lineConfig.textFontSize || defaultLineConfig.textFontSize,\n        textShiftX: props.lineConfig.textShiftX || defaultLineConfig.textShiftX,\n        textShiftY: props.lineConfig.textShiftY || defaultLineConfig.textShiftY,\n        shiftY: props.lineConfig.shiftY || defaultLineConfig.shiftY,\n        delay: props.lineConfig.delay || defaultLineConfig.delay,\n        startIndex: props.lineConfig.startIndex || defaultLineConfig.startIndex,\n        endIndex:\n          props.lineConfig.endIndex === 0\n            ? 0\n            : props.lineConfig.endIndex || defaultLineConfig.endIndex,\n      }\n    : defaultLineConfig;\n  const containerHeight = props.height || 200;\n  const noOfSections = props.noOfSections || 10;\n  const horizSections = [{value: '0'}];\n  const horizSectionsBelow = [];\n  const stepHeight = props.stepHeight || containerHeight / noOfSections;\n  const spacing = props.spacing === 0 ? 0 : props.spacing || 20;\n  const labelWidth = props.labelWidth || 0;\n  const scrollToEnd = props.scrollToEnd || false;\n  const scrollAnimation = props.scrollAnimation === false ? false : true;\n  const labelsExtraHeight = props.labelsExtraHeight || 0;\n\n  let totalWidth = spacing;\n  let maxItem = 0,\n    minItem = 0;\n  if (props.stackData) {\n    props.stackData.forEach(stackItem => {\n      // console.log('stackItem', stackItem);\n      let stackSum = stackItem.stacks.reduce(\n        (acc, stack) => acc + stack.value,\n        0,\n      );\n      // console.log('stackSum--->', stackSum);\n      if (stackSum > maxItem) {\n        maxItem = stackSum;\n      }\n      if (stackSum < minItem) {\n        minItem = stackSum;\n      }\n      totalWidth +=\n        (stackItem.stacks[0].barWidth || props.barWidth || 30) + spacing;\n      // console.log('totalWidth for stack===', totalWidth);\n    });\n  } else {\n    data.forEach((item: itemType) => {\n      if (item.value > maxItem) {\n        maxItem = item.value;\n      }\n      if (item.value < minItem) {\n        minItem = item.value;\n      }\n      totalWidth +=\n        (item.barWidth || props.barWidth || 30) +\n        (item.spacing === 0 ? 0 : item.spacing || spacing);\n      // console.log('totalWidth for bar===', totalWidth);\n    });\n  }\n  if (props.showFractionalValues || props.roundToDigits) {\n    maxItem *= 10 * (props.roundToDigits || 1);\n    maxItem = maxItem + (10 - (maxItem % 10));\n    maxItem /= 10 * (props.roundToDigits || 1);\n    maxItem = parseFloat(maxItem.toFixed(props.roundToDigits || 1));\n    if (minItem !== 0) {\n      minItem *= 10 * (props.roundToDigits || 1);\n      minItem = minItem - (10 + (minItem % 10));\n      minItem /= 10 * (props.roundToDigits || 1);\n      minItem = parseFloat(minItem.toFixed(props.roundToDigits || 1));\n    }\n  } else {\n    maxItem = maxItem + (10 - (maxItem % 10));\n    if (minItem !== 0) {\n      minItem = minItem - (10 + (minItem % 10));\n    }\n  }\n\n  const maxValue = props.maxValue || maxItem;\n  const minValue = props.minValue || minItem;\n\n  const stepValue = props.stepValue || maxValue / noOfSections;\n  const noOfSectionsBelowXAxis =\n    props.noOfSectionsBelowXAxis || -minValue / stepValue;\n  const disableScroll = props.disableScroll || false;\n  const showScrollIndicator = props.showScrollIndicator || false;\n  // const oldData = props.oldData || [];\n  const side = props.side || '';\n  const rotateLabel = props.rotateLabel || false;\n  const isAnimated = props.isAnimated || false;\n  const animationDuration = props.animationDuration || 800;\n  // const animationEasing = props.animationEasing || Easing.ease;\n  const opacity = props.opacity || 1;\n  const isThreeD = props.isThreeD || false;\n\n  const showVerticalLines = props.showVerticalLines || false;\n  const rulesThickness =\n    props.rulesThickness === 0 ? 0 : props.rulesThickness || 1;\n  const rulesLength = props.rulesLength;\n  const rulesColor = props.rulesColor || 'lightgray';\n  const verticalLinesThickness =\n    props.verticalLinesThickness === 0 ? 0 : props.verticalLinesThickness || 1;\n  const verticalLinesHeight = props.verticalLinesHeight;\n  const verticalLinesColor = props.verticalLinesColor || 'lightgray';\n  const verticalLinesZIndex = props.verticalLinesZIndex || -1;\n  let verticalLinesAr = [];\n  props.noOfVerticalLines\n    ? (verticalLinesAr = [...Array(props.noOfVerticalLines).keys()])\n    : (verticalLinesAr = [\n        ...Array(props.stackData ? props.stackData.length : data.length).keys(),\n      ]);\n  const verticalLinesSpacing = props.verticalLinesSpacing || 0;\n\n  const showYAxisIndices = props.showYAxisIndices || false;\n  const showXAxisIndices = props.showXAxisIndices || false;\n  const yAxisIndicesHeight = props.yAxisIndicesHeight || 2;\n  const xAxisIndicesHeight = props.xAxisIndicesHeight || 2;\n  const yAxisIndicesWidth = props.yAxisIndicesWidth || 4;\n  const xAxisIndicesWidth = props.xAxisIndicesWidth || 4;\n  const xAxisIndicesColor = props.xAxisIndicesColor || 'black';\n  const yAxisIndicesColor = props.yAxisIndicesColor || 'black';\n\n  const yAxisLabelPrefix = props.yAxisLabelPrefix || '';\n  const yAxisLabelSuffix = props.yAxisLabelSuffix || '';\n  const yAxisSide = props.yAxisSide || 'left';\n\n  const xAxisThickness =\n    props.xAxisThickness === 0\n      ? props.xAxisThickness\n      : props.xAxisThickness || 1;\n  const xAxisLength = props.xAxisLength;\n  const xAxisColor = props.xAxisColor || 'black';\n\n  const hideRules = props.hideRules || false;\n\n  const yAxisThickness =\n    props.yAxisThickness === 0\n      ? props.yAxisThickness\n      : props.yAxisThickness || 1;\n  const yAxisColor = props.yAxisColor || 'black';\n  const yAxisTextStyle = props.yAxisTextStyle;\n  const yAxisTextNumberOfLines = props.yAxisTextNumberOfLines || 1;\n  const xAxisTextNumberOfLines = props.xAxisTextNumberOfLines || 1;\n  const yAxisLabelContainerStyle = props.yAxisLabelContainerStyle;\n  const horizontalRulesStyle = props.horizontalRulesStyle;\n  const showFractionalValues = props.showFractionalValues || false;\n  const yAxisLabelWidth = props.yAxisLabelWidth || 35;\n  const hideYAxisText = props.hideYAxisText || false;\n\n  const backgroundColor = props.backgroundColor || 'transparent';\n  const horizontal = props.horizontal || false;\n  const yAxisAtTop = props.yAxisAtTop || false;\n  const intactTopLabel = props.intactTopLabel || false;\n  const hideOrigin = props.hideOrigin || false;\n\n  const rulesType = props.rulesType || 'line';\n  const xAxisType = props.xAxisType || 'solid';\n  const dashWidth = props.dashWidth === 0 ? 0 : props.dashWidth || 4;\n  const dashGap = props.dashGap === 0 ? 0 : props.dashGap || 8;\n\n  const heightValue = useMemo(() => new Animated.Value(0), []);\n  const opacValue = useMemo(() => new Animated.Value(0), []);\n  const widthValue = useMemo(() => new Animated.Value(0), []);\n  const autoShiftLabels = props.autoShiftLabels || false;\n\n  const labelsAppear = useCallback(() => {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false,\n    }).start();\n  }, [opacValue]);\n  // const moveBar = useCallback(() => {\n  //   heightValue.setValue(0);\n  //   Animated.timing(heightValue, {\n  //     toValue: 1,\n  //     duration: animationDuration,\n  //     easing: animationEasing,\n  //     useNativeDriver: false,\n  //   }).start();\n  // }, [animationDuration, animationEasing, heightValue]);\n\n  const decreaseWidth = useCallback(() => {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start();\n  }, [animationDuration, widthValue]);\n  // console.log('olddata', oldData);\n\n  useEffect(() => {\n    if (showLine) {\n      let pp = '';\n      if (!lineConfig.curved) {\n        for (let i = 0; i < lineData.length; i++) {\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          const currentBarWidth =\n            (data && data[i] && data[i].barWidth) || props.barWidth || 30;\n          pp +=\n            'L' +\n            (yAxisLabelWidth +\n              lineConfig.initialSpacing +\n              6 -\n              (initialSpacing - currentBarWidth / 2) -\n              lineConfig.dataPointsWidth / 2 +\n              (currentBarWidth + spacing) * i) +\n            ' ' +\n            (containerHeight -\n              lineConfig.shiftY -\n              (lineData[i].value * containerHeight) / maxValue) +\n            ' ';\n        }\n        setPoints(pp.replace('L', 'M'));\n      } else {\n        let p1Array = [];\n        for (let i = 0; i < lineData.length; i++) {\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          const currentBarWidth =\n            (data && data[i] && data[i].barWidth) || props.barWidth || 30;\n          p1Array.push([\n            yAxisLabelWidth +\n              lineConfig.initialSpacing +\n              6 -\n              (initialSpacing - currentBarWidth / 2) -\n              lineConfig.dataPointsWidth / 2 +\n              (currentBarWidth + spacing) * i,\n            containerHeight -\n              lineConfig.shiftY -\n              (lineData[i].value * containerHeight) / maxValue,\n          ]);\n          let xx = svgPath(p1Array, bezierCommand);\n          setPoints(xx);\n        }\n      }\n      if (lineConfig.isAnimated) {\n        setTimeout(() => decreaseWidth(), lineConfig.delay || 0);\n      }\n    }\n    // moveBar();\n    setTimeout(() => labelsAppear(), animationDuration);\n  }, [\n    animationDuration,\n    containerHeight,\n    data,\n    lineData,\n    decreaseWidth,\n    initialSpacing,\n    labelsAppear,\n    lineConfig.initialSpacing,\n    lineConfig.curved,\n    lineConfig.dataPointsWidth,\n    lineConfig.shiftY,\n    lineConfig.isAnimated,\n    lineConfig.delay,\n    lineConfig.startIndex,\n    lineConfig.endIndex,\n    maxValue,\n    // moveBar,\n    props.barWidth,\n    showLine,\n    spacing,\n    yAxisLabelWidth,\n  ]);\n\n  const defaultReferenceConfig = {\n    thickness: rulesThickness,\n    width: horizontal\n      ? props.width || totalWidth\n      : (props.width || totalWidth) + 11,\n    color: 'black',\n    type: rulesType,\n    dashWidth: dashWidth,\n    dashGap: dashGap,\n    labelText: '',\n    labelTextStyle: null,\n  };\n\n  const showReferenceLine1 = props.showReferenceLine1 || false;\n  const referenceLine1Position =\n    props.referenceLine1Position === 0\n      ? 0\n      : props.referenceLine1Position || containerHeight / 2;\n  const referenceLine1Config = props.referenceLine1Config\n    ? {\n        thickness: props.referenceLine1Config.thickness || rulesThickness,\n        width: horizontal\n          ? props.referenceLine1Config.width || props.width || totalWidth\n          : (props.referenceLine1Config.width || props.width || totalWidth) +\n            11,\n        color: props.referenceLine1Config.color || 'black',\n        type: props.referenceLine1Config.type || rulesType,\n        dashWidth: props.referenceLine1Config.dashWidth || dashWidth,\n        dashGap: props.referenceLine1Config.dashGap || dashGap,\n        labelText:\n          props.referenceLine1Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          props.referenceLine1Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  const showReferenceLine2 = props.showReferenceLine2 || false;\n  const referenceLine2Position =\n    props.referenceLine2Position === 0\n      ? 0\n      : props.referenceLine2Position || (3 * containerHeight) / 2;\n  const referenceLine2Config = props.referenceLine2Config\n    ? {\n        thickness: props.referenceLine2Config.thickness || rulesThickness,\n        width: horizontal\n          ? props.referenceLine2Config.width || props.width || totalWidth\n          : (props.referenceLine2Config.width || props.width || totalWidth) +\n            11,\n        color: props.referenceLine2Config.color || 'black',\n        type: props.referenceLine2Config.type || rulesType,\n        dashWidth: props.referenceLine2Config.dashWidth || dashWidth,\n        dashGap: props.referenceLine2Config.dashGap || dashGap,\n        labelText:\n          props.referenceLine2Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          props.referenceLine2Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  const showReferenceLine3 = props.showReferenceLine3 || false;\n  const referenceLine3Position =\n    props.referenceLine3Position === 0\n      ? 0\n      : props.referenceLine3Position || containerHeight / 3;\n  const referenceLine3Config = props.referenceLine3Config\n    ? {\n        thickness: props.referenceLine3Config.thickness || rulesThickness,\n        width: horizontal\n          ? props.referenceLine3Config.width || props.width || totalWidth\n          : (props.referenceLine3Config.width || props.width || totalWidth) +\n            11,\n        color: props.referenceLine3Config.color || 'black',\n        type: props.referenceLine3Config.type || rulesType,\n        dashWidth: props.referenceLine3Config.dashWidth || dashWidth,\n        dashGap: props.referenceLine3Config.dashGap || dashGap,\n        labelText:\n          props.referenceLine3Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          props.referenceLine3Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  horizSections.pop();\n  for (let i = 0; i <= noOfSections; i++) {\n    let value = maxValue - stepValue * i;\n    if (props.showFractionalValues || props.roundToDigits) {\n      value = parseFloat(value.toFixed(props.roundToDigits || 1));\n    }\n    horizSections.push({\n      value: props.yAxisLabelTexts\n        ? props.yAxisLabelTexts[noOfSections - i] ?? value.toString()\n        : value.toString(),\n    });\n  }\n  if (noOfSectionsBelowXAxis) {\n    for (let i = 1; i <= noOfSectionsBelowXAxis; i++) {\n      let value = stepValue * -i;\n      if (props.showFractionalValues || props.roundToDigits) {\n        value = parseFloat(value.toFixed(props.roundToDigits || 1));\n      }\n      horizSectionsBelow.push({\n        value: props.yAxisLabelTexts\n          ? props.yAxisLabelTexts[noOfSectionsBelowXAxis - i] ??\n            value.toString()\n          : value.toString(),\n      });\n    }\n  }\n\n  const animatedHeight = heightValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%'],\n  });\n  const appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n  });\n\n  const animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth],\n  });\n\n  const getLabel = (val, index) => {\n    let label = '';\n    if (\n      showFractionalValues ||\n      (props.yAxisLabelTexts && props.yAxisLabelTexts[index] !== undefined)\n    ) {\n      if (val) {\n        label = props.yAxisOffset\n          ? (Number(val) + props.yAxisOffset).toString()\n          : val;\n      } else {\n        label = props.yAxisOffset ? props.yAxisOffset.toString() : '0';\n      }\n    } else {\n      if (val) {\n        label = val.toString().split('.')[0];\n        if (props.yAxisOffset) {\n          label = (Number(label) + props.yAxisOffset).toString();\n        }\n      } else {\n        label = props.yAxisOffset ? props.yAxisOffset.toString() : '0';\n      }\n    }\n\n    return yAxisLabelPrefix + label + yAxisLabelSuffix;\n  };\n\n  const renderHorizSections = () => {\n    return (\n      <>\n        {horizSections.map((sectionItems, index) => {\n          return (\n            <View\n              key={index}\n              style={[\n                styles.horizBar,\n                {\n                  width: horizontal\n                    ? props.width || Math.min(300, totalWidth)\n                    : props.width || totalWidth + 11,\n                },\n                yAxisSide === 'right' && {transform: [{rotateY: '180deg'}]},\n                horizontalRulesStyle,\n              ]}>\n              <View\n                style={[\n                  styles.leftLabel,\n                  {\n                    borderRightWidth: yAxisThickness,\n                    borderColor: yAxisColor,\n                  },\n                  horizontal &&\n                    !yAxisAtTop && {\n                      transform: [\n                        {\n                          translateX:\n                            (props.width || Math.min(300, totalWidth)) +\n                            yAxisThickness,\n                        },\n                      ],\n                    },\n                  {\n                    height:\n                      index === noOfSections ? stepHeight / 2 : stepHeight,\n                    width: yAxisLabelWidth,\n                  },\n                  yAxisLabelContainerStyle,\n                ]}\n              />\n              <View\n                style={[\n                  index === noOfSections\n                    ? styles.lastLeftPart\n                    : styles.leftPart,\n                  {backgroundColor: backgroundColor},\n                ]}>\n                {index === noOfSections ? (\n                  <Rule\n                    config={{\n                      thickness: xAxisThickness,\n                      color: xAxisColor,\n                      width:\n                        xAxisLength ||\n                        (horizontal\n                          ? props.width || Math.min(300, totalWidth)\n                          : (props.width || totalWidth) + 11),\n                      dashWidth: dashWidth,\n                      dashGap: dashGap,\n                      type: xAxisType,\n                    }}\n                  />\n                ) : hideRules ? null : (\n                  <Rule\n                    config={{\n                      thickness: rulesThickness,\n                      color: rulesColor,\n                      width:\n                        rulesLength ||\n                        (horizontal\n                          ? props.width || Math.min(300, totalWidth)\n                          : (props.width || totalWidth) + 11),\n                      dashWidth: dashWidth,\n                      dashGap: dashGap,\n                      type: rulesType,\n                    }}\n                  />\n                )}\n              </View>\n            </View>\n          );\n        })}\n\n        {\n          /***********************************************************************************************/\n          /**************************      Render the y axis labels separately      **********************/\n          /***********************************************************************************************/\n          props.hideAxesAndRules !== true &&\n            !hideYAxisText &&\n            horizSections.map((sectionItems, index) => {\n              let label = getLabel(sectionItems.value, index);\n              if (hideOrigin && index === horizSections.length - 1) {\n                label = '';\n              }\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      top: stepHeight * index,\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                    yAxisSide === 'right' && {\n                      transform: [\n                        {\n                          translateX:\n                            (props.width ? props.width : totalWidth) - 30,\n                        },\n                        {rotateY: '180deg'},\n                      ],\n                    },\n                    horizontal &&\n                      !yAxisAtTop && {\n                        transform: [\n                          {\n                            translateX:\n                              (props.width || Math.min(300, totalWidth)) +\n                              yAxisThickness +\n                              yAxisLabelWidth,\n                          },\n                        ],\n                      },\n                    yAxisLabelContainerStyle,\n                  ]}>\n                  <Text\n                    numberOfLines={yAxisTextNumberOfLines}\n                    ellipsizeMode={'clip'}\n                    style={[\n                      yAxisTextStyle,\n                      yAxisSide === 'right' && {\n                        transform: [{rotateY: '180deg'}],\n                      },\n                      index === noOfSections && {\n                        marginBottom: stepHeight / -2,\n                      },\n                    ]}>\n                    {label}\n                  </Text>\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n        {horizSectionsBelow.map((sectionItems, index) => {\n          return (\n            <View\n              key={index}\n              style={[\n                styles.horizBar,\n                {\n                  width: horizontal\n                    ? props.width || totalWidth\n                    : props.width || totalWidth + 11,\n                },\n                yAxisSide === 'right' && {transform: [{rotateY: '180deg'}]},\n                index === 0 && {marginTop: stepHeight / 2},\n              ]}>\n              <View\n                style={[\n                  styles.leftLabel,\n                  {\n                    borderRightWidth: yAxisThickness,\n                    borderColor: yAxisColor,\n                  },\n                  horizontal &&\n                    !yAxisAtTop && {\n                      transform: [{translateX: totalWidth + yAxisThickness}],\n                    },\n                  {\n                    height: index === 0 ? stepHeight * 1.5 : stepHeight,\n                    width: yAxisLabelWidth,\n                  },\n                  index === 0 && {marginTop: -stepHeight / 2},\n                ]}\n              />\n              <View\n                style={[styles.leftPart, {backgroundColor: backgroundColor}]}>\n                {hideRules ? null : (\n                  <Rule\n                    config={{\n                      thickness: rulesThickness,\n                      color: rulesColor,\n                      width:\n                        rulesLength ||\n                        (horizontal\n                          ? props.width || totalWidth\n                          : (props.width || totalWidth) + 11),\n                      dashWidth: dashWidth,\n                      dashGap: dashGap,\n                      type: rulesType,\n                    }}\n                  />\n                )}\n              </View>\n            </View>\n          );\n        })}\n        {\n          /***********************************************************************************************/\n          /*************************      Render the y axis labels below origin      *********************/\n          /***********************************************************************************************/\n          props.hideAxesAndRules !== true &&\n            !hideYAxisText &&\n            horizSectionsBelow.map((sectionItems, index) => {\n              let label = getLabel(\n                horizSectionsBelow[horizSectionsBelow.length - 1 - index].value,\n                index,\n              );\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      bottom: stepHeight * (index - 1),\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                    yAxisSide === 'right' && {\n                      transform: [\n                        {\n                          translateX:\n                            (props.width ? props.width : totalWidth) - 30,\n                        },\n                        {rotateY: '180deg'},\n                      ],\n                    },\n                    yAxisLabelContainerStyle,\n                  ]}>\n                  <Text\n                    numberOfLines={yAxisTextNumberOfLines}\n                    ellipsizeMode={'clip'}\n                    style={[\n                      yAxisTextStyle,\n                      yAxisSide === 'right' && {\n                        transform: [{rotateY: '180deg'}],\n                      },\n                      index === noOfSections && {\n                        marginBottom: stepHeight / -2,\n                      },\n                    ]}>\n                    {label}\n                  </Text>\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n\n        {\n          /***********************************************************************************************/\n          /*************************      Render the reference lines separately      *********************/\n          /***********************************************************************************************/\n          props.hideAxesAndRules !== true &&\n            !hideYAxisText &&\n            horizSections.map((sectionItems, index) => {\n              let label = getLabel(sectionItems.value, index);\n              if (hideOrigin && index === horizSections.length - 1) {\n                label = '';\n              }\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      top: stepHeight * index,\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                    yAxisSide === 'right' && {\n                      transform: [\n                        {\n                          translateX:\n                            (props.width ? props.width : totalWidth) - 30,\n                        },\n                        {rotateY: '180deg'},\n                      ],\n                    },\n                  ]}>\n                  {index === noOfSections && showReferenceLine1 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          (referenceLine1Position * containerHeight) / maxValue,\n                        left:\n                          yAxisSide === 'right'\n                            ? yAxisLabelWidth + yAxisThickness\n                            : yAxisLabelWidth + yAxisThickness - 5,\n                      }}>\n                      <Rule config={referenceLine1Config} />\n                      {referenceLine1Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            yAxisSide === 'right' && {\n                              transform: [{rotateY: '180deg'}],\n                            },\n                            referenceLine1Config.labelTextStyle,\n                          ]}>\n                          {referenceLine1Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                  {index === noOfSections && showReferenceLine2 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          (referenceLine2Position * containerHeight) / maxValue,\n                        left:\n                          yAxisSide === 'right'\n                            ? yAxisLabelWidth + yAxisThickness\n                            : yAxisLabelWidth + yAxisThickness - 5,\n                      }}>\n                      <Rule config={referenceLine2Config} />\n                      {referenceLine2Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            yAxisSide === 'right' && {\n                              transform: [{rotateY: '180deg'}],\n                            },\n                            referenceLine2Config.labelTextStyle,\n                          ]}>\n                          {referenceLine2Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                  {index === noOfSections && showReferenceLine3 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          (referenceLine3Position * containerHeight) / maxValue,\n                        left:\n                          yAxisSide === 'right'\n                            ? yAxisLabelWidth + yAxisThickness\n                            : yAxisLabelWidth + yAxisThickness - 5,\n                      }}>\n                      <Rule config={referenceLine3Config} />\n                      {referenceLine3Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            yAxisSide === 'right' && {\n                              transform: [{rotateY: '180deg'}],\n                            },\n                            referenceLine3Config.labelTextStyle,\n                          ]}>\n                          {referenceLine3Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n      </>\n    );\n  };\n\n  const renderSpecificVerticalLines = (dataForRender: any) => {\n    return dataForRender.map((item: any, index: number) => {\n      if (item.showVerticalLine) {\n        const currentBarWidth = item.barWidth || props.barWidth || 30;\n        return (\n          <Rect\n            x={\n              yAxisLabelWidth +\n              6 -\n              (item.verticalLineThickness || 1) / 2 -\n              1 -\n              (initialSpacing - currentBarWidth / 2) +\n              (currentBarWidth + spacing) * index\n            }\n            y={\n              containerHeight -\n              lineConfig.shiftY -\n              (item.value * containerHeight) / maxValue +\n              9\n            }\n            width={item.verticalLineThickness || 1}\n            height={\n              (item.value * containerHeight) / maxValue + lineConfig.shiftY\n            }\n            fill={item.verticalLineColor || 'lightgray'}\n          />\n        );\n      }\n      return null;\n    });\n  };\n\n  const renderDataPoints = () => {\n    return lineData.map((item: any, index: number) => {\n      if (index < lineConfig.startIndex || index > lineConfig.endIndex) {\n        return null;\n      }\n      // console.log('comes in');\n      const currentBarWidth = item.barWidth || props.barWidth || 30;\n      if (lineConfig.dataPointsShape === 'rectangular') {\n        return (\n          <Fragment key={index}>\n            <Rect\n              x={\n                yAxisLabelWidth +\n                lineConfig.initialSpacing +\n                6 -\n                (initialSpacing - currentBarWidth / 2) -\n                lineConfig.dataPointsWidth +\n                (currentBarWidth + spacing) * index\n              }\n              y={\n                containerHeight -\n                lineConfig.shiftY -\n                lineConfig.dataPointsHeight / 2 -\n                (item.value * containerHeight) / maxValue\n              }\n              width={lineConfig.dataPointsWidth}\n              height={lineConfig.dataPointsHeight}\n              fill={lineConfig.dataPointsColor}\n            />\n            {item.dataPointText && (\n              <CanvasText\n                fill={item.textColor || lineConfig.textColor}\n                fontSize={item.textFontSize || lineConfig.textFontSize}\n                x={\n                  yAxisLabelWidth +\n                  lineConfig.initialSpacing +\n                  6 -\n                  (initialSpacing - currentBarWidth / 2) -\n                  lineConfig.dataPointsWidth +\n                  (currentBarWidth + spacing) * index +\n                  (item.textShiftX || lineConfig.textShiftX || 0)\n                }\n                y={\n                  containerHeight -\n                  lineConfig.shiftY -\n                  lineConfig.dataPointsHeight / 2 -\n                  (item.value * containerHeight) / maxValue +\n                  (item.textShiftY || lineConfig.textShiftY || 0)\n                }>\n                {item.dataPointText}\n              </CanvasText>\n            )}\n          </Fragment>\n        );\n      }\n      return (\n        <Fragment key={index}>\n          <Circle\n            cx={\n              yAxisLabelWidth +\n              lineConfig.initialSpacing +\n              6 -\n              (initialSpacing - currentBarWidth / 2) -\n              lineConfig.dataPointsWidth / 2 +\n              (currentBarWidth + spacing) * index\n            }\n            cy={\n              containerHeight -\n              lineConfig.shiftY -\n              (item.value * containerHeight) / maxValue\n            }\n            r={lineConfig.dataPointsRadius}\n            fill={lineConfig.dataPointsColor}\n          />\n          {item.dataPointText && (\n            <CanvasText\n              fill={item.textColor || lineConfig.textColor}\n              fontSize={item.textFontSize || lineConfig.textFontSize}\n              x={\n                yAxisLabelWidth +\n                lineConfig.initialSpacing +\n                6 -\n                (initialSpacing - currentBarWidth / 2) -\n                lineConfig.dataPointsWidth +\n                (currentBarWidth + spacing) * index +\n                (item.textShiftX || lineConfig.textShiftX || 0)\n              }\n              y={\n                containerHeight -\n                lineConfig.shiftY -\n                lineConfig.dataPointsHeight / 2 -\n                (item.value * containerHeight) / maxValue +\n                (item.textShiftY || lineConfig.textShiftY || 0)\n              }>\n              {item.dataPointText}\n            </CanvasText>\n          )}\n        </Fragment>\n      );\n    });\n  };\n  const renderSpecificDataPoints = dataForRender => {\n    return dataForRender.map((item: any, index: number) => {\n      const currentBarWidth = item.barWidth || props.barWidth || 30;\n      if (item.showDataPoint) {\n        if (item.dataPointShape === 'rectangular') {\n          return (\n            <Fragment key={index}>\n              <Rect\n                x={\n                  initialSpacing -\n                  (item.dataPointWidth || 2) / 2 -\n                  1 +\n                  (currentBarWidth + spacing) * index\n                }\n                y={\n                  containerHeight -\n                  lineConfig.shiftY -\n                  (item.dataPointHeight || 2) / 2 +\n                  10 -\n                  (item.value * containerHeight) / maxValue\n                }\n                width={item.dataPointWidth || 2}\n                height={item.dataPointHeight || 2}\n                fill={item.dataPointColor || 'black'}\n              />\n              {item.dataPointText && (\n                <CanvasText\n                  fill={item.textColor || 'black'}\n                  fontSize={item.textFontSize || 10}\n                  x={\n                    initialSpacing -\n                    (item.dataPointWidth || 2) +\n                    spacing * index +\n                    (item.textShiftX || lineConfig.textShiftX || 0)\n                  }\n                  y={\n                    containerHeight -\n                    lineConfig.shiftY -\n                    (item.dataPointHeight || 2) / 2 +\n                    10 -\n                    (item.value * containerHeight) / maxValue +\n                    (item.textShiftY || lineConfig.textShiftY || 0)\n                  }>\n                  {item.dataPointText}\n                </CanvasText>\n              )}\n            </Fragment>\n          );\n        } else {\n          return (\n            <Fragment key={index}>\n              <Circle\n                cx={\n                  initialSpacing -\n                  (item.dataPointWidth || 2) / 2 +\n                  spacing * index\n                }\n                cy={\n                  containerHeight -\n                  lineConfig.shiftY +\n                  10 -\n                  (item.value * containerHeight) / maxValue\n                }\n                r={item.dataPointRadius || 3}\n                fill={item.dataPointColor || 'black'}\n              />\n              {item.dataPointText && (\n                <CanvasText\n                  fill={item.textColor || 'black'}\n                  fontSize={item.textFontSize || 10}\n                  x={\n                    initialSpacing -\n                    (item.dataPointWidth || 2) +\n                    spacing * index +\n                    (item.textShiftX || lineConfig.textShiftX || 0)\n                  }\n                  y={\n                    containerHeight -\n                    lineConfig.shiftY -\n                    (item.dataPointHeight || 2) / 2 +\n                    10 -\n                    (item.value * containerHeight) / maxValue +\n                    (item.textShiftY || lineConfig.textShiftY || 0)\n                  }>\n                  {item.dataPointText}\n                </CanvasText>\n              )}\n            </Fragment>\n          );\n        }\n      }\n      return null;\n    });\n  };\n\n  const renderAnimatedLine = () => {\n    // console.log('animatedWidth is-------->', animatedWidth);\n    return (\n      <Animated.View\n        style={{\n          position: 'absolute',\n          height: containerHeight + 10,\n          bottom: 60, //stepHeight * -0.5 + xAxisThickness,\n          width: animatedWidth,\n          zIndex: -1,\n          // backgroundColor: 'wheat',\n        }}>\n        <Svg>\n          <Path\n            d={points}\n            fill=\"none\"\n            stroke={lineConfig.color}\n            strokeWidth={lineConfig.thickness}\n          />\n\n          {renderSpecificVerticalLines(data)}\n\n          {!lineConfig.hideDataPoints\n            ? renderDataPoints()\n            : renderSpecificDataPoints(data)}\n        </Svg>\n      </Animated.View>\n    );\n  };\n\n  const renderLine = () => {\n    return (\n      <View\n        style={{\n          position: 'absolute',\n          height: containerHeight + 10,\n          bottom: 60, //stepHeight * -0.5 + xAxisThickness,\n          width: totalWidth,\n          zIndex: -1,\n          // backgroundColor: 'rgba(200,150,150,0.1)'\n        }}>\n        <Svg>\n          <Path\n            d={points}\n            fill=\"none\"\n            stroke={lineConfig.color}\n            strokeWidth={lineConfig.thickness}\n          />\n          {renderSpecificVerticalLines(data)}\n\n          {!lineConfig.hideDataPoints\n            ? renderDataPoints()\n            : renderSpecificDataPoints(data)}\n        </Svg>\n      </View>\n    );\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          height:\n            containerHeight +\n            horizSectionsBelow.length * stepHeight +\n            labelsExtraHeight,\n        },\n        yAxisSide === 'right' && {marginLeft: yAxisLabelWidth + yAxisThickness},\n        props.width && !horizontal && {width: props.width},\n        horizontal && {transform: [{rotate: '90deg'}, {translateY: 15}]},\n      ]}>\n      {props.hideAxesAndRules !== true && renderHorizSections()}\n      <ScrollView\n        ref={scrollRef}\n        onTouchStart={evt => {\n          if (props.renderTooltip) {\n            setSelectedIndex(-1);\n          }\n        }}\n        onContentSizeChange={() => {\n          if (scrollRef.current && scrollToEnd) {\n            scrollRef.current.scrollToEnd({animated: scrollAnimation});\n          }\n        }}\n        style={[\n          {\n            marginLeft:\n              yAxisSide === 'right' ? -yAxisLabelWidth + 10 : yAxisLabelWidth,\n            position: 'absolute',\n            bottom: stepHeight * -0.5 - 60 + xAxisThickness,\n          },\n          props.width && {width: props.width - 11},\n          horizontal && {width: props.width || Math.min(300, totalWidth)},\n        ]}\n        scrollEnabled={!disableScroll}\n        contentContainerStyle={[\n          {\n            // backgroundColor: 'yellow',\n            height:\n              containerHeight +\n              130 +\n              horizSectionsBelow.length * stepHeight +\n              labelsExtraHeight,\n            paddingLeft: initialSpacing,\n            paddingBottom:\n              horizSectionsBelow.length * stepHeight + labelsExtraHeight,\n            alignItems: 'flex-end',\n          },\n          !props.width && {width: totalWidth},\n        ]}\n        showsHorizontalScrollIndicator={showScrollIndicator}\n        indicatorStyle={props.indicatorColor}\n        horizontal\n        // data={props.stackData || data}\n        keyExtractor={(item, index) => index.toString()}>\n        <Fragment>\n          {showVerticalLines &&\n            verticalLinesAr.map((item: itemType, index: number) => {\n              let totalSpacing = initialSpacing;\n              if (verticalLinesSpacing) {\n                totalSpacing = verticalLinesSpacing * (index + 1);\n              } else {\n                if (props.stackData) {\n                  totalSpacing +=\n                    (props.stackData[0].barWidth || props.barWidth || 30) / 2;\n                } else {\n                  totalSpacing +=\n                    (props.data[0].barWidth || props.barWidth || 30) / 2;\n                }\n                for (let i = 0; i < index; i++) {\n                  let actualSpacing = spacing;\n                  if (props.stackData) {\n                    if (i >= props.stackData.length - 1) {\n                      actualSpacing += (props.barWidth || 30) / 2;\n                    } else {\n                      if (\n                        props.stackData[i].spacing ||\n                        props.stackData[i].spacing === 0\n                      ) {\n                        actualSpacing = props.stackData[i].spacing;\n                      }\n                      if (props.stackData[i + 1].barWidth) {\n                        actualSpacing += props.stackData[i + 1].barWidth;\n                      } else {\n                        actualSpacing += props.barWidth || 30;\n                      }\n                    }\n                  } else {\n                    if (i >= props.data.length - 1) {\n                      actualSpacing += (props.barWidth || 30) / 2;\n                    } else {\n                      if (\n                        props.data[i].spacing ||\n                        props.data[i].spacing === 0\n                      ) {\n                        console.log('here for index ' + index + ' and i ' + i);\n                        actualSpacing = props.data[i].spacing;\n                      }\n                      if (props.data[i + 1].barWidth) {\n                        actualSpacing += props.data[i + 1].barWidth;\n                      } else {\n                        actualSpacing += props.barWidth || 30;\n                      }\n                    }\n                  }\n                  console.log('i = ' + i + ' actualSpacing ' + actualSpacing);\n                  totalSpacing += actualSpacing;\n                }\n              }\n\n              return (\n                <View\n                  key={index}\n                  style={{\n                    position: 'absolute',\n                    zIndex: verticalLinesZIndex || -1,\n                    marginBottom: xAxisThickness,\n                    height:\n                      verticalLinesHeight ||\n                      containerHeight + 15 - xAxisThickness,\n                    width: verticalLinesThickness,\n                    backgroundColor: verticalLinesColor,\n                    bottom: 60 + labelsExtraHeight,\n                    left: totalSpacing,\n                  }}\n                />\n              );\n            })}\n          {showLine\n            ? lineConfig.isAnimated\n              ? renderAnimatedLine()\n              : renderLine()\n            : null}\n          {props.stackData\n            ? props.stackData.map((item, index) => {\n                return (\n                  <RenderStackBars\n                    key={index}\n                    stackData={props.stackData}\n                    item={item}\n                    index={index}\n                    containerHeight={containerHeight}\n                    maxValue={maxValue}\n                    spacing={item.spacing === 0 ? 0 : item.spacing || spacing}\n                    propSpacing={spacing}\n                    xAxisThickness={xAxisThickness}\n                    barWidth={props.barWidth}\n                    opacity={opacity}\n                    disablePress={item.disablePress || props.disablePress}\n                    rotateLabel={rotateLabel}\n                    showXAxisIndices={showXAxisIndices}\n                    xAxisIndicesHeight={xAxisIndicesHeight}\n                    xAxisIndicesWidth={xAxisIndicesWidth}\n                    xAxisIndicesColor={xAxisIndicesColor}\n                    horizontal={horizontal}\n                    intactTopLabel={intactTopLabel}\n                    barBorderRadius={props.barBorderRadius}\n                    color={props.color}\n                    showGradient={props.showGradient}\n                    gradientColor={props.gradientColor}\n                    barBackgroundPattern={props.barBackgroundPattern}\n                    patternId={props.patternId}\n                    label={\n                      item.label ||\n                      (props.xAxisLabelTexts && props.xAxisLabelTexts[index]\n                        ? props.xAxisLabelTexts[index]\n                        : '')\n                    }\n                    labelTextStyle={\n                      item.labelTextStyle || props.xAxisLabelTextStyle\n                    }\n                    xAxisTextNumberOfLines={xAxisTextNumberOfLines}\n                    renderTooltip={props.renderTooltip}\n                    initialSpacing={initialSpacing}\n                    selectedIndex={selectedIndex}\n                    setSelectedIndex={setSelectedIndex}\n                    activeOpacity={props.activeOpacity || 0.2}\n                  />\n                );\n              })\n            : data.map((item, index) => (\n                <RenderBars\n                  key={index}\n                  item={item}\n                  index={index}\n                  containerHeight={containerHeight}\n                  maxValue={maxValue}\n                  spacing={item.spacing === 0 ? 0 : item.spacing || spacing}\n                  propSpacing={spacing}\n                  side={side}\n                  data={data}\n                  barWidth={props.barWidth}\n                  sideWidth={props.sideWidth}\n                  labelWidth={labelWidth}\n                  opacity={opacity}\n                  isThreeD={isThreeD}\n                  isAnimated={isAnimated}\n                  animationDuration={animationDuration}\n                  rotateLabel={rotateLabel}\n                  animatedHeight={animatedHeight}\n                  appearingOpacity={appearingOpacity}\n                  roundedTop={props.roundedTop}\n                  roundedBottom={props.roundedBottom}\n                  disablePress={props.disablePress}\n                  frontColor={props.frontColor}\n                  sideColor={props.sideColor}\n                  topColor={props.topColor}\n                  showGradient={props.showGradient}\n                  gradientColor={props.gradientColor}\n                  activeOpacity={props.activeOpacity}\n                  cappedBars={props.cappedBars}\n                  capThickness={props.capThickness}\n                  capColor={props.capColor}\n                  capRadius={props.capRadius}\n                  showXAxisIndices={showXAxisIndices}\n                  xAxisIndicesHeight={xAxisIndicesHeight}\n                  xAxisIndicesWidth={xAxisIndicesWidth}\n                  xAxisIndicesColor={xAxisIndicesColor}\n                  horizontal={horizontal}\n                  intactTopLabel={intactTopLabel}\n                  barBorderRadius={props.barBorderRadius}\n                  autoShiftLabels={autoShiftLabels}\n                  barBackgroundPattern={props.barBackgroundPattern}\n                  patternId={props.patternId}\n                  barMarginBottom={props.barMarginBottom}\n                  label={\n                    item.label ||\n                    (props.xAxisLabelTexts && props.xAxisLabelTexts[index]\n                      ? props.xAxisLabelTexts[index]\n                      : '')\n                  }\n                  labelTextStyle={\n                    item.labelTextStyle || props.xAxisLabelTextStyle\n                  }\n                  onPress={props.onPress}\n                  xAxisTextNumberOfLines={xAxisTextNumberOfLines}\n                  renderTooltip={props.renderTooltip}\n                  initialSpacing={initialSpacing}\n                  selectedIndex={selectedIndex}\n                  setSelectedIndex={setSelectedIndex}\n                />\n              ))}\n        </Fragment>\n      </ScrollView>\n    </View>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}