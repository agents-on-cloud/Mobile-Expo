{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as AddCalendarEvent from 'react-native-add-calendar-event';\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EVENT_TITLE = '';\nvar TIME_NOW_IN_UTC = moment.utc();\n\nvar utcDateToString = function utcDateToString(momentInUTC) {\n  var s = moment.utc(momentInUTC).format('YYYY-MM-DDTHH:mm:ss.SSS[Z]');\n  return s;\n};\n\nvar addToCalendar = function addToCalendar(title, startDateUTC) {\n  var eventConfig = {\n    title: title,\n    startDate: utcDateToString(startDateUTC),\n    endDate: utcDateToString(moment.utc(startDateUTC).add(1, 'hours')),\n    notes: 'tasty!',\n    navigationBarIOS: {\n      tintColor: 'orange',\n      backgroundColor: 'green',\n      titleColor: 'blue'\n    }\n  };\n  AddCalendarEvent.presentEventCreatingDialog(eventConfig).then(function (eventInfo) {\n    alert('eventInfo -> ' + JSON.stringify(eventInfo));\n  }).catch(function (error) {\n    alert('Error -> ' + error);\n  });\n};\n\nvar editCalendarEventWithId = function editCalendarEventWithId(eventId) {\n  if (!eventId) {\n    alert('Please Insert Event Id');\n    return;\n  }\n\n  var eventConfig = {\n    eventId: eventId\n  };\n  AddCalendarEvent.presentEventEditingDialog(eventConfig).then(function (eventInfo) {\n    alert('eventInfo -> ' + JSON.stringify(eventInfo));\n  }).catch(function (error) {\n    alert('Error -> ' + error);\n  });\n};\n\nvar showCalendarEventWithId = function showCalendarEventWithId(eventId) {\n  if (!eventId) {\n    alert('Please Insert Event Id');\n    return;\n  }\n\n  var eventConfig = {\n    eventId: eventId,\n    allowsEditing: true,\n    allowsCalendarPreview: true,\n    navigationBarIOS: {\n      tintColor: 'orange',\n      backgroundColor: 'green'\n    }\n  };\n  AddCalendarEvent.presentEventViewingDialog(eventConfig).then(function (eventInfo) {\n    alert('eventInfo -> ' + JSON.stringify(eventInfo));\n  }).catch(function (error) {\n    alert('Error -> ' + error);\n  });\n};\n\nvar App = function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.titleStyle,\n        children: \"Add Event to your Mobile Calendar\"\n      }), _jsxs(Text, {\n        style: styles.heading,\n        children: [\"Event title: \", EVENT_TITLE, '\\n', \"Event Date Time: \", moment.utc(TIME_NOW_IN_UTC).local().format('llllll')]\n      }), _jsx(TouchableOpacity, {\n        style: [styles.buttonStyle, {\n          minWidth: '100%'\n        }],\n        onPress: function onPress() {\n          addToCalendar(EVENT_TITLE, TIME_NOW_IN_UTC);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonTextStyle,\n          children: \"Add Event to Calendar\"\n        })\n      }), _jsx(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Enter Event Title to find  \",\n        onChangeText: function onChangeText(text) {\n          return setText(text);\n        },\n        value: text\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: [_jsx(TouchableOpacity, {\n          style: styles.buttonStyle,\n          onPress: function onPress() {\n            editCalendarEventWithId(text);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonTextStyle,\n            children: \"Edit Event\"\n          })\n        }), _jsx(View, {\n          style: {\n            margin: 5\n          }\n        }), _jsx(TouchableOpacity, {\n          style: styles.buttonStyle,\n          onPress: function onPress() {\n            showCalendarEventWithId(text);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonTextStyle,\n            children: \"View Event\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#F9F3EE',\n    padding: 16\n  },\n  heading: {\n    color: 'teal',\n    fontSize: 16,\n    textAlign: 'center',\n    margin: 10\n  },\n  buttonStyle: {\n    paddingVertical: 10,\n    paddingHorizontal: 30,\n    backgroundColor: 'teal',\n    margin: 15\n  },\n  buttonTextStyle: {\n    color: 'white',\n    textAlign: 'center'\n  },\n  buttonHalfStyle: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n    flex: 1\n  },\n  titleStyle: {\n    color: 'teal',\n    textAlign: 'center',\n    fontSize: 20,\n    marginBottom: 20\n  },\n  inputStyle: {\n    height: 40,\n    minWidth: '100%',\n    marginBottom: 10,\n    marginTop: 30,\n    padding: 10,\n    backgroundColor: '#A0BCC2'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","AddCalendarEvent","moment","EVENT_TITLE","TIME_NOW_IN_UTC","utc","utcDateToString","momentInUTC","s","format","addToCalendar","title","startDateUTC","eventConfig","startDate","endDate","add","notes","navigationBarIOS","tintColor","backgroundColor","titleColor","presentEventCreatingDialog","then","eventInfo","alert","JSON","stringify","catch","error","editCalendarEventWithId","eventId","presentEventEditingDialog","showCalendarEventWithId","allowsEditing","allowsCalendarPreview","presentEventViewingDialog","App","text","setText","styles","container","titleStyle","heading","local","buttonStyle","minWidth","buttonTextStyle","inputStyle","flexDirection","margin","StyleSheet","create","flex","alignItems","justifyContent","padding","color","fontSize","textAlign","paddingVertical","paddingHorizontal","buttonHalfStyle","marginBottom","height","marginTop"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/apps/laser-avenue77/src/calendar/screens/Calendar.js"],"sourcesContent":["// Add Event in Deviceâ€™s Calendar from React Native App for Android and iOS\r\n// https://aboutreact.com/react-native-add-event-in-device-calendar/\r\n \r\n// import React in our code\r\nimport React, {useState,useEffect} from 'react';\r\n \r\n// import all the components we are going to use\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\n \r\n//Import library for AddCalendarEvent\r\nimport\r\n  * as AddCalendarEvent\r\nfrom 'react-native-add-calendar-event';\r\n\r\n\r\n//Import moment.js to deal with time\r\nimport moment from 'moment';\r\n\r\n \r\nconst EVENT_TITLE = '';\r\nconst TIME_NOW_IN_UTC = moment.utc();\r\n \r\nconst utcDateToString = (momentInUTC) => {\r\n  let s = moment.utc(momentInUTC)\r\n            .format('YYYY-MM-DDTHH:mm:ss.SSS[Z]');\r\n  return s;\r\n};\r\n \r\nconst addToCalendar = (title, startDateUTC) => {\r\n  const eventConfig = {\r\n    title,\r\n    startDate: utcDateToString(startDateUTC),\r\n    endDate: \r\n    utcDateToString(moment.utc(startDateUTC).add(1, 'hours')),\r\n    notes: 'tasty!',\r\n    navigationBarIOS: {\r\n      tintColor: 'orange',\r\n      backgroundColor: 'green',\r\n      titleColor: 'blue',\r\n    },\r\n  };\r\n \r\n  AddCalendarEvent.presentEventCreatingDialog(eventConfig)\r\n    .then((eventInfo) => {\r\n      alert('eventInfo -> ' + JSON.stringify(eventInfo));\r\n    })\r\n    .catch((error) => {\r\n      // handle error such as when user rejected permissions\r\n      alert('Error -> ' + error);\r\n    });\r\n};\r\n \r\nconst editCalendarEventWithId = (eventId) => {\r\n  if (!eventId) {\r\n    alert('Please Insert Event Id');\r\n    return;\r\n  }\r\n  const eventConfig = {\r\n    eventId,\r\n  };\r\n \r\n  AddCalendarEvent.presentEventEditingDialog(eventConfig)\r\n    .then((eventInfo) => {\r\n      alert('eventInfo -> ' + JSON.stringify(eventInfo));\r\n    })\r\n    .catch((error) => {\r\n      alert('Error -> ' + error);\r\n    });\r\n};\r\n \r\nconst showCalendarEventWithId = (eventId) => {\r\n  if (!eventId) {\r\n    alert('Please Insert Event Id');\r\n    return;\r\n  }\r\n  const eventConfig = {\r\n    eventId,\r\n    allowsEditing: true,\r\n    allowsCalendarPreview: true,\r\n    navigationBarIOS: {\r\n      tintColor: 'orange',\r\n      backgroundColor: 'green',\r\n    },\r\n  };\r\n \r\n  AddCalendarEvent.presentEventViewingDialog(eventConfig)\r\n    .then((eventInfo) => {\r\n      alert('eventInfo -> ' + JSON.stringify(eventInfo));\r\n    })\r\n    .catch((error) => {\r\n      alert('Error -> ' + error);\r\n    });\r\n};\r\n \r\nconst App = () => {\r\n\r\n    \r\n  const [text, setText] = useState('');\r\n \r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.titleStyle}>\r\n        Add Event to your Mobile Calendar\r\n        \r\n        </Text>\r\n        <Text style={styles.heading}>\r\n          Event title: {EVENT_TITLE}\r\n          {'\\n'}\r\n          Event Date Time: {\r\n            moment.utc(TIME_NOW_IN_UTC).local().format('llllll')\r\n          }\r\n        </Text>\r\n        <TouchableOpacity\r\n          style={[styles.buttonStyle, {minWidth: '100%'}]}\r\n          onPress={() => {\r\n            addToCalendar(EVENT_TITLE, TIME_NOW_IN_UTC);\r\n          }}>\r\n          <Text style={styles.buttonTextStyle}>\r\n            Add Event to Calendar\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <TextInput\r\n          style={styles.inputStyle}\r\n          placeholder=\"Enter Event Title to find  \"\r\n          onChangeText={(text) => setText(text)}\r\n          value={text}\r\n        />\r\n        <View style={{flexDirection: 'row'}}>\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            onPress={() => {\r\n              editCalendarEventWithId(text);\r\n            }}>\r\n            <Text style={styles.buttonTextStyle}>\r\n              Edit Event\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <View style={{margin: 5}} />\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            onPress={() => {\r\n              showCalendarEventWithId(text);\r\n            }}>\r\n            <Text style={styles.buttonTextStyle}>\r\n              View Event\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\nexport default App;\r\n \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#F9F3EE',\r\n    padding: 16,\r\n  },\r\n  heading: {\r\n    color: 'teal',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    margin: 10,\r\n  },\r\n  buttonStyle: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 30,\r\n    backgroundColor: 'teal',\r\n    margin: 15,\r\n  },\r\n  buttonTextStyle: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n  },\r\n  buttonHalfStyle: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#DDDDDD',\r\n    padding: 10,\r\n    flex: 1,\r\n  },\r\n  titleStyle: {\r\n    color: 'teal',\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    marginBottom: 20,\r\n  },\r\n  inputStyle: {\r\n    height: 40,\r\n    minWidth: '100%',\r\n    marginBottom: 10,\r\n    marginTop: 30,\r\n    padding: 10,\r\n    backgroundColor: '#A0BCC2',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}