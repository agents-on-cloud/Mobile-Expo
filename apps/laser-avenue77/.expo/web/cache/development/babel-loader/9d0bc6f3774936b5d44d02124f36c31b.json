{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport { Checkbox, Center, NativeBaseProvider } from \"native-base\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Example = function Example() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      groupValues = _React$useState2[0],\n      setGroupValues = _React$useState2[1];\n\n  useEffect(function () {\n    console.log('====================================');\n    console.log(groupValues);\n    console.log('====================================');\n  }, [groupValues]);\n\n  function test(params) {}\n\n  return _jsxs(Checkbox.Group, {\n    onChange: setGroupValues,\n    value: groupValues,\n    accessibilityLabel: \"choose numbers\",\n    children: [_jsx(Checkbox, {\n      value: \"one\",\n      my: 2,\n      children: \"UX Research\"\n    }), _jsx(Checkbox, {\n      value: \"two\",\n      children: \"Software Development\"\n    })]\n  });\n};\n\nexport default (function () {\n  return _jsx(Text, {\n    children: \"ddddddddddddddddddddddddddddddddddddddddddddddd\"\n  });\n});","map":{"version":3,"names":["React","useEffect","Checkbox","Center","NativeBaseProvider","Example","useState","groupValues","setGroupValues","console","log","test","params"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/apps/laser-avenue77/src/FinalLayout/libraryTest.js"],"sourcesContent":["import React,{useEffect} from \"react\";\r\nimport { Checkbox, Center, NativeBaseProvider } from \"native-base\";\r\nimport {Text} from 'react-native'\r\n\r\nconst Example = () => {\r\n  const [groupValues, setGroupValues] = React.useState([]);\r\n  useEffect(() => {\r\nconsole.log('====================================');\r\nconsole.log(groupValues);\r\nconsole.log('====================================');\r\n  }, [groupValues])\r\n  function test(params) {\r\n    \r\n  }\r\n  \r\n  return <Checkbox.Group onChange={setGroupValues} value={groupValues} accessibilityLabel=\"choose numbers\">\r\n      <Checkbox value=\"one\" my={2}>\r\n        UX Research\r\n      </Checkbox>\r\n      <Checkbox value=\"two\">Software Development</Checkbox>\r\n    </Checkbox.Group>;\r\n};\r\n\r\n    export default () => {\r\n        return (\r\n        <Text>ddddddddddddddddddddddddddddddddddddddddddddddd</Text>\r\n        );\r\n    };\r\n    "],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,kBAA3B,QAAqD,aAArD;;;;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EACpB,sBAAsCL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAtC;EAAA;EAAA,IAAOC,WAAP;EAAA,IAAoBC,cAApB;;EACAP,SAAS,CAAC,YAAM;IAClBQ,OAAO,CAACC,GAAR,CAAY,sCAAZ;IACAD,OAAO,CAACC,GAAR,CAAYH,WAAZ;IACAE,OAAO,CAACC,GAAR,CAAY,sCAAZ;EACG,CAJQ,EAIN,CAACH,WAAD,CAJM,CAAT;;EAKA,SAASI,IAAT,CAAcC,MAAd,EAAsB,CAErB;;EAED,OAAO,MAAC,QAAD,CAAU,KAAV;IAAgB,QAAQ,EAAEJ,cAA1B;IAA0C,KAAK,EAAED,WAAjD;IAA8D,kBAAkB,EAAC,gBAAjF;IAAA,WACH,KAAC,QAAD;MAAU,KAAK,EAAC,KAAhB;MAAsB,EAAE,EAAE,CAA1B;MAAA;IAAA,EADG,EAIH,KAAC,QAAD;MAAU,KAAK,EAAC,KAAhB;MAAA;IAAA,EAJG;EAAA,EAAP;AAMD,CAjBD;;AAmBI,gBAAe,YAAM;EACjB,OACA,KAAC,IAAD;IAAA;EAAA,EADA;AAGH,CAJD"},"metadata":{},"sourceType":"module"}