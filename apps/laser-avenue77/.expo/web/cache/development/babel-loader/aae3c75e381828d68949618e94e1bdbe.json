{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from '@expo/vector-icons/FontAwesome';\nimport Comment from \"./Comment\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Comments(_ref) {\n  var navigation = _ref.navigation,\n      id = _ref.id,\n      type = _ref.type,\n      taskCreator = _ref.taskCreator,\n      userId = _ref.userId,\n      userName = _ref.userName;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      str = _useState4[0],\n      setStr = _useState4[1];\n\n  useEffect(function () {\n    if (id) {\n      getComments();\n    }\n\n    function getComments() {\n      var res;\n      return _regeneratorRuntime.async(function getComments$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios({\n                method: 'POST',\n                url: 'https://api.development.agentsoncloud.com/external/public/',\n                headers: {\n                  'requsted-service': 'communities',\n                  'requsted-path': '/comments/task/:id/:type',\n                  'requsted-method': 'get'\n                },\n                data: {\n                  id: id,\n                  type: type\n                }\n              }));\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status) {\n                setComments(res.data);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('error');\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }\n  }, [id]);\n\n  var handleInput = function handleInput(text) {\n    setStr(text);\n  };\n\n  var addComment = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios({\n              method: 'POST',\n              url: 'https://api.development.agentsoncloud.com/external/public/',\n              headers: {\n                'requsted-service': 'communities',\n                'requsted-path': '/comments/addComment',\n                'requsted-method': 'post'\n              },\n              data: {\n                task_id: id,\n                user_id: userId,\n                user_name: userName,\n                comment: str,\n                type: type\n              }\n            }));\n\n          case 3:\n            response = _context2.sent;\n\n            if (response.status) {\n              setStr('');\n              setComments([].concat(_toConsumableArray(comments), [response.data]));\n            }\n\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 18,\n        color: 'black',\n        margin: 4,\n        paddingVertical: 15\n      },\n      children: \"Comments :\"\n    }), _jsxs(View, {\n      style: {\n        alignItems: 'center',\n        borderBottomWidth: 2,\n        borderColor: '#eee'\n      },\n      children: [_jsx(View, {\n        style: {\n          width: '70%',\n          backgroundColor: 'rgb(245, 245, 245)'\n        },\n        children: _jsx(TextInput, {\n          onChangeText: handleInput,\n          value: str,\n          placeholder: \"Enter your comment here\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: style.add_comment_btn,\n        onPress: addComment,\n        children: _jsx(View, {\n          children: _jsx(Text, {\n            style: style.add_comment_text,\n            children: \"Add comment\"\n          })\n        })\n      })]\n    }), _jsx(FlatList, {\n      data: comments,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        return _jsx(Comment, {\n          comment: item,\n          comments: comments,\n          setComments: setComments,\n          taskCreator: taskCreator,\n          userId: userId,\n          userName: userName\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.comment.id;\n      }\n    })]\n  });\n}\nvar style = StyleSheet.create({\n  container: {\n    minHeight: 140,\n    backgroundColor: 'white'\n  },\n  add_comment_btn: {\n    marginTop: 10,\n    marginBottom: 20,\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingRight: 40,\n    paddingLeft: 40,\n    backgroundColor: '#2A416A',\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#2A416A'\n  },\n  add_comment_text: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 14\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Icon","Comment","axios","Comments","navigation","id","type","taskCreator","userId","userName","comments","setComments","str","setStr","getComments","method","url","headers","data","res","status","console","log","handleInput","text","addComment","task_id","user_id","user_name","comment","response","message","style","container","fontSize","color","margin","paddingVertical","alignItems","borderBottomWidth","borderColor","width","backgroundColor","add_comment_btn","add_comment_text","item","index","StyleSheet","create","minHeight","marginTop","marginBottom","paddingTop","paddingBottom","paddingRight","paddingLeft","borderRadius","borderWidth","textAlign"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/apps/laser-avenue77/src/Tasks/Screens/Comments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  ScrollView,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Modal,\r\n  FlatList,\r\n} from 'react-native';\r\nimport Icon from '@expo/vector-icons/FontAwesome';\r\nimport Comment from './Comment';\r\nimport axios from 'axios';\r\n\r\nexport default function Comments({\r\n  navigation,\r\n  id,\r\n  type,\r\n  taskCreator,\r\n  userId,\r\n  userName,\r\n}) {\r\n  const [comments, setComments] = useState([]);\r\n  const [str, setStr] = useState('');\r\n  useEffect(() => {\r\n    if (id) {\r\n      getComments();\r\n    }\r\n    async function getComments() {\r\n      try {\r\n        // const res = await axios.get(\r\n        //   `http://10.0.2.2:30122/comments/task/${id}/${type}`\r\n        // );\r\n        const res = await axios({\r\n          method: 'POST',\r\n          url: 'https://api.development.agentsoncloud.com/external/public/',\r\n          headers: {\r\n            'requsted-service': 'communities',\r\n            'requsted-path': '/comments/task/:id/:type',\r\n            'requsted-method': 'get',\r\n          },\r\n          data: {\r\n            id: id,\r\n            type: type,\r\n          },\r\n        });\r\n        if (res.status) {\r\n          setComments(res.data);\r\n        }\r\n      } catch (error) {\r\n        console.log('error');\r\n      }\r\n    }\r\n  }, [id]);\r\n\r\n  const handleInput = (text) => {\r\n    setStr(text);\r\n  };\r\n\r\n  const addComment = async () => {\r\n    try {\r\n      // const response = await axios.post(\r\n      //   `http://10.0.2.2:30122/comments/addComment`,\r\n      //   {\r\n      //     task_id: id,\r\n      //     user_id: userId,\r\n      //     user_name: userName,\r\n      //     comment: str,\r\n      //     type: type,\r\n      //   }\r\n      // );\r\n      const response = await axios({\r\n        method: 'POST',\r\n        url: 'https://api.development.agentsoncloud.com/external/public/',\r\n        headers: {\r\n          'requsted-service': 'communities',\r\n          'requsted-path': '/comments/addComment',\r\n          'requsted-method': 'post',\r\n        },\r\n        data: {\r\n          task_id: id,\r\n          user_id: userId,\r\n          user_name: userName,\r\n          comment: str,\r\n          type: type,\r\n        },\r\n      });\r\n      if (response.status) {\r\n        setStr('');\r\n        setComments([...comments, response.data]);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={style.container}>\r\n      <Text\r\n        style={{ fontSize: 18, color: 'black', margin: 4, paddingVertical: 15 }}\r\n      >\r\n        Comments :\r\n      </Text>\r\n      <View\r\n        style={{\r\n          alignItems: 'center',\r\n          borderBottomWidth: 2,\r\n          borderColor: '#eee',\r\n        }}\r\n      >\r\n        <View style={{ width: '70%', backgroundColor: 'rgb(245, 245, 245)' }}>\r\n          <TextInput\r\n            onChangeText={handleInput}\r\n            value={str}\r\n            placeholder=\"Enter your comment here\"\r\n          />\r\n        </View>\r\n        <TouchableOpacity style={style.add_comment_btn} onPress={addComment}>\r\n          <View>\r\n            <Text style={style.add_comment_text}>Add comment</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <FlatList\r\n        data={comments}\r\n        renderItem={({ item, index }) => {\r\n          return (\r\n            <Comment\r\n              comment={item}\r\n              comments={comments}\r\n              setComments={setComments}\r\n              taskCreator={taskCreator}\r\n              userId={userId}\r\n              userName={userName}\r\n            />\r\n          );\r\n        }}\r\n        keyExtractor={(item) => item.comment.id}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n  container: {\r\n    minHeight: 140,\r\n    backgroundColor: 'white',\r\n  },\r\n  add_comment_btn: {\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n    paddingRight: 40,\r\n    paddingLeft: 40,\r\n    backgroundColor: '#2A416A',\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderColor: '#2A416A',\r\n  },\r\n  add_comment_text: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}