{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { createSlice } from '@reduxjs/toolkit';\nexport var searchStore = createSlice({\n  name: 'provider',\n  initialState: {\n    value: 66,\n    searchInput: '',\n    searchFlag: false,\n    recentSearches: []\n  },\n  reducers: {\n    increment: function increment(state, action) {\n      state.value = state.value + action.payload;\n    },\n    searchInputHandler: function searchInputHandler(state, action) {\n      state.searchInput = action.payload, state.searchFlag = !state.searchFlag;\n    },\n    emptySearchInput: function emptySearchInput(state, action) {\n      state.searchInput = \"\";\n    },\n    saveRecentSearches: function saveRecentSearches(state, action) {\n      state.recentSearches = [].concat(_toConsumableArray(state.recentSearches), [action.payload]);\n      var uniqueAddresses = Array.from(new Set(state.recentSearches.map(function (a) {\n        return a.entityID;\n      }))).map(function (id) {\n        return state.recentSearches.find(function (a) {\n          return a.entityID === id;\n        });\n      });\n      state.recentSearches = uniqueAddresses;\n    },\n    DeleteRecentSearch: function DeleteRecentSearch(state, action) {\n      state.recentSearches = action.payload;\n      console.log('/////////////////', action.payload);\n      console.log('====================================');\n      console.log(state.recentSearches);\n      console.log('====================================');\n    },\n    saveUniqueRecentSearches: function saveUniqueRecentSearches(state, action) {\n      console.log('action.payload', action.payload);\n      state.recentSearches = action.payload;\n      console.log('state.recentSearches', state.recentSearches);\n    }\n  }\n});\nvar _searchStore$actions = searchStore.actions,\n    increment = _searchStore$actions.increment,\n    searchInputHandler = _searchStore$actions.searchInputHandler,\n    emptySearchInput = _searchStore$actions.emptySearchInput,\n    saveRecentSearches = _searchStore$actions.saveRecentSearches,\n    DeleteRecentSearch = _searchStore$actions.DeleteRecentSearch,\n    saveUniqueRecentSearches = _searchStore$actions.saveUniqueRecentSearches;\nexport { increment, searchInputHandler, emptySearchInput, saveRecentSearches, DeleteRecentSearch, saveUniqueRecentSearches };\nexport default searchStore.reducer;","map":{"version":3,"names":["createSlice","searchStore","name","initialState","value","searchInput","searchFlag","recentSearches","reducers","increment","state","action","payload","searchInputHandler","emptySearchInput","saveRecentSearches","uniqueAddresses","Array","from","Set","map","a","entityID","id","find","DeleteRecentSearch","console","log","saveUniqueRecentSearches","actions","reducer"],"sources":["C:/Users/User/AgentsNx/Mobile-Expo/agents/apps/laser-avenue77/src/Search/search-store.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nexport const searchStore=createSlice({\r\n    name:'provider',\r\n    initialState:{\r\n        value:66,\r\n        searchInput:'',\r\n        searchFlag:false,\r\n        recentSearches:[]\r\n    },\r\n    reducers:{\r\n    increment:(state,action)=>{\r\n    state.value = state.value + action.payload\r\n    },\r\n    searchInputHandler:(state,action)=>{\r\n        state.searchInput = action.payload,\r\n        state.searchFlag = !state.searchFlag\r\n\r\n        },\r\n    emptySearchInput:(state,action)=>{\r\n            state.searchInput =\"\"\r\n            },\r\n    saveRecentSearches:(state,action)=>{\r\n        state.recentSearches= [...state.recentSearches,action.payload]\r\n        const uniqueAddresses = Array.from(new Set(state.recentSearches.map(a => a.entityID)))\r\n        .map(id => {\r\n          return state.recentSearches.find(a => a.entityID === id)\r\n        })\r\n     state.recentSearches=uniqueAddresses\r\n        \r\n        // state.recentSearches=recent\r\n        // state.recentSearches= \r\n        // console.log('/////////////////',action.payload);\r\n        // state.recentSearches.push(action.payload)\r\n        // console.log('laaaaaaaaaaaaaaaaaith',JSON.stringify(state.recentSearches)  );\r\n                },\r\n     DeleteRecentSearch:(state,action)=>{\r\n                    state.recentSearches=action.payload\r\n                    console.log('/////////////////',action.payload);\r\n                    console.log('====================================');\r\n                    console.log(state.recentSearches);\r\n                    console.log('====================================');\r\n\r\n                    // console.log('888888888888',action.payload);\r\n                    // let newRecentSearches=[]\r\n                    // for (let i = 0; i < state.recentSearches.length; i++) {\r\n                    //     console.log('state.recentSearches[i]',state.recentSearches[i]);\r\n                    //     if (state.recentSearches[i] !== action.payload.entityID) {\r\n                    //         newRecentSearches.push(state.recentSearches[i])\r\n                    //     }\r\n                      \r\n                        \r\n                    // }\r\n                    // state.recentSearches = newRecentSearches\r\n                    // console.log('state.recentSearchesstate.recentSearches',newRecentSearches);\r\n                    },\r\n                    saveUniqueRecentSearches:(state,action)=>{\r\n                        console.log('action.payload',action.payload);\r\n                        state.recentSearches=action.payload\r\n                        console.log('state.recentSearches',state.recentSearches);\r\n                    }\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const {increment,searchInputHandler,emptySearchInput,saveRecentSearches,DeleteRecentSearch,saveUniqueRecentSearches} =searchStore.actions\r\nexport default searchStore.reducer "],"mappings":";AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,OAAO,IAAMC,WAAW,GAACD,WAAW,CAAC;EACjCE,IAAI,EAAC,UAD4B;EAEjCC,YAAY,EAAC;IACTC,KAAK,EAAC,EADG;IAETC,WAAW,EAAC,EAFH;IAGTC,UAAU,EAAC,KAHF;IAITC,cAAc,EAAC;EAJN,CAFoB;EAQjCC,QAAQ,EAAC;IACTC,SAAS,EAAC,mBAACC,KAAD,EAAOC,MAAP,EAAgB;MAC1BD,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAAnC;IACC,CAHQ;IAITC,kBAAkB,EAAC,4BAACH,KAAD,EAAOC,MAAP,EAAgB;MAC/BD,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAA3B,EACAF,KAAK,CAACJ,UAAN,GAAmB,CAACI,KAAK,CAACJ,UAD1B;IAGC,CARI;IASTQ,gBAAgB,EAAC,0BAACJ,KAAD,EAAOC,MAAP,EAAgB;MACzBD,KAAK,CAACL,WAAN,GAAmB,EAAnB;IACC,CAXA;IAYTU,kBAAkB,EAAC,4BAACL,KAAD,EAAOC,MAAP,EAAgB;MAC/BD,KAAK,CAACH,cAAN,gCAA0BG,KAAK,CAACH,cAAhC,IAA+CI,MAAM,CAACC,OAAtD;MACA,IAAMI,eAAe,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQT,KAAK,CAACH,cAAN,CAAqBa,GAArB,CAAyB,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,QAAN;MAAA,CAA1B,CAAR,CAAX,EACvBF,GADuB,CACnB,UAAAG,EAAE,EAAI;QACT,OAAOb,KAAK,CAACH,cAAN,CAAqBiB,IAArB,CAA0B,UAAAH,CAAC;UAAA,OAAIA,CAAC,CAACC,QAAF,KAAeC,EAAnB;QAAA,CAA3B,CAAP;MACD,CAHuB,CAAxB;MAIHb,KAAK,CAACH,cAAN,GAAqBS,eAArB;IAOY,CAzBJ;IA0BRS,kBAAkB,EAAC,4BAACf,KAAD,EAAOC,MAAP,EAAgB;MACpBD,KAAK,CAACH,cAAN,GAAqBI,MAAM,CAACC,OAA5B;MACAc,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgChB,MAAM,CAACC,OAAvC;MACAc,OAAO,CAACC,GAAR,CAAY,sCAAZ;MACAD,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACH,cAAlB;MACAmB,OAAO,CAACC,GAAR,CAAY,sCAAZ;IAcC,CA7CR;IA8COC,wBAAwB,EAAC,kCAAClB,KAAD,EAAOC,MAAP,EAAgB;MACrCe,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BhB,MAAM,CAACC,OAApC;MACAF,KAAK,CAACH,cAAN,GAAqBI,MAAM,CAACC,OAA5B;MACAc,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCjB,KAAK,CAACH,cAAzC;IACH;EAlDR;AARwB,CAAD,CAA7B;AAgEA,2BAAsHN,WAAW,CAAC4B,OAAlI;AAAA,IAAOpB,SAAP,wBAAOA,SAAP;AAAA,IAAiBI,kBAAjB,wBAAiBA,kBAAjB;AAAA,IAAoCC,gBAApC,wBAAoCA,gBAApC;AAAA,IAAqDC,kBAArD,wBAAqDA,kBAArD;AAAA,IAAwEU,kBAAxE,wBAAwEA,kBAAxE;AAAA,IAA2FG,wBAA3F,wBAA2FA,wBAA3F;;AACP,eAAe3B,WAAW,CAAC6B,OAA3B"},"metadata":{},"sourceType":"module"}